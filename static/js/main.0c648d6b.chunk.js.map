{"version":3,"sources":["components/ContactList/ContactList.module.css","components/NavigationLinks/NavigationLinks.module.css","components/Filter/Filter.module.css","redux/reduxContacts/contactsAction.js","data/api-contacts.js","components/ContactList/ContactList.js","managerToken/token.js","redux/reduxActions.js","redux/reduxContacts/contact-selectors.js","components/ContactForm/ContactForm.js","redux/reduxContacts/contactsOperation.js","redux/reduxRegistration/reduxRegistrationAction.js","redux/reduxRegistration/reduxRegistrationOperatiom.js","components/Registration/RegistrationForm.jsx","redux/reduxSignInAndOut/reduxSignInAndOut.js","redux/reduxSignInAndOut/reduxSignInAndOutOperation.js","components/SignIn/SignIn.jsx","components/NavigationLinks/NavigationLink/NavigationLink.js","components/NavigationLinks/NavigationLinks.jsx","components/Filter/Filter.js","App.js","redux/reduxRegistration/reduxRegistrationReducer.js","redux/reduxSignInAndOut/reduxSignInAndOutReducer.js","redux/reduxContacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","actionAddContact","createAction","newContact","payload","actionRemoveContact","id","actionGetContactsSuccess","flag","contacts","actionContactError","value","axios","require","defaults","baseURL","postRegistUser","newUser","a","post","data","postSignInUser","privateData","postSignOut","postAddNewContact","console","log","deleteContact","delete","getAllContactsUser","get","ContactList","useSelector","state","items","filter","isLoading","dispatch","useDispatch","onRemove","idContact","renderList","array","filterInput","contact","name","toLowerCase","includes","getVisibleContacts","map","index","number","onClick","className","style","button__delete","length","handle","token","headers","common","Authorization","actionSetFilter","actionContactRequestStatus","getContactMemo","createSelector","ContactForm","logIn","onAdd","useEffect","useState","setName","phone","setPhone","handleChangeForm","target","validateFrom","arrayItems","nameContact","isExistContact","find","alert","handleCheckUniqueContact","toast","onSubmit","e","preventDefault","type","placeholder","onChange","actionAddNewUserSuccess","actionAddNewUserError","asyncRegistNewUser","validationSchema","yup","email","required","max","password","min","RegistrationForm","registration","onRegisteration","dataFrom","formik","useFormik","initialValues","filledForm","handleSubmit","TextField","fullWidth","label","values","handleChange","error","touched","Boolean","errors","helperText","Button","color","variant","actionSignInSuccess","actionSignInError","actionSignOutSuccess","actionSignOutError","asyncSignIn","user","SignInForm","signIn","emailPassword","NavigationLink","to","text","NavigationLinks","signOut","navigation__wrapper","Filter","input__filter","valueInput","App","path","exact","SignIn","reducerRegistration","createReducer","reducerSignInAndOut","reducerContacts","reducerFilter","_","reducerLoading","contactPersistConfig","key","storage","rootReducer","combineReducers","persistReducer","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0c648d6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__delete\":\"ContactList_button__delete__24um3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation__wrapper\":\"NavigationLinks_navigation__wrapper__3-9Tx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__filter\":\"Filter_input__filter__3w506\"};","import { createAction } from '@reduxjs/toolkit';\nconst actionAddContact = createAction('items/add', newContact => ({\n  payload: newContact,\n}));\nconst actionRemoveContact = createAction('items/remove', id => ({\n  payload: id,\n}));\n\nconst actionContactRequestStatus = createAction('items/request', flag => ({\n  payload: flag,\n}));\nconst actionGetContactsSuccess = createAction('items/success', contacts => ({\n  payload: contacts,\n}));\nconst actionContactError = createAction('items/error', value => ({\n  payload: value,\n}));\n\nexport {\n  actionAddContact,\n  actionRemoveContact,\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n};\n","const axios = require('axios');\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst postRegistUser = async newUser => {\n  const { data } = await axios.post(`/users/signup`, newUser);\n  return data;\n};\nconst postSignInUser = async privateData => {\n  const { data } = await axios.post(`/users/login`, privateData);\n  return data;\n};\nconst postSignOut = async () => {\n  await axios.post(`/users/logout`);\n};\nconst postAddNewContact = async newContact => {\n  console.log(newContact, `www`);\n  const data = await axios.post(`/contacts`, newContact);\n  console.log(data, `data`);\n};\nconst deleteContact = async id => {\n  console.log(id, `id`);\n  const data = await axios.delete(`/contacts/${id}`);\n  console.log(data, `data delete`);\n};\n\nconst getAllContactsUser = async () => {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n};\n\nexport {\n  postRegistUser,\n  postSignInUser,\n  postSignOut,\n  getAllContactsUser,\n  postAddNewContact,\n  deleteContact,\n};\n","import style from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionRemoveContact } from 'redux/reduxContacts/contactsAction';\nimport { deleteContact } from 'data/api-contacts';\n\nconst ContactList = () => {\n  const { items, filter, isLoading } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const onRemove = async idContact => {\n    await deleteContact(idContact);\n    dispatch(actionRemoveContact(idContact));\n  };\n\n  const getVisibleContacts = (items, filterInput) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filterInput.toLowerCase()),\n    );\n  };\n  const renderList = array => {\n    let data = array;\n    if (!data) {\n      data = getVisibleContacts(items, filter);\n    }\n    return (\n      <ul>\n        {data.map(({ id, name, number }, index) => {\n          return (\n            <li key={index}>\n              {name} : {number}\n              <button\n                onClick={() => {\n                  onRemove(id);\n                }}\n                className={style.button__delete}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  if (items.length === 0) return null;\n\n  return (\n    <>\n      <h2>{isLoading}</h2>\n      {filter !== '' && renderList(false)}\n      {filter === '' && renderList(items)}\n    </>\n  );\n};\n\nexport default ContactList;\n","const axios = require('axios');\nexport const handle = {\n  setToken(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  removeToken() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n","import { createAction } from '@reduxjs/toolkit';\nconst actionSetFilter = createAction('filter/addFilter', filter => ({\n  payload: filter,\n}));\nconst actionContactRequestStatus = createAction('items/request', flag => ({\n  payload: flag,\n}));\nconst actionGetContactsSuccess = createAction('items/success', contacts => ({\n  payload: contacts,\n}));\nconst actionContactError = createAction('items/error', value => ({\n  payload: value,\n}));\n\nexport {\n  actionSetFilter,\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n};\n","import { createSelector } from 'reselect';\nconst getContact = state => state;\nconst getContactMemo = createSelector([getContact], contacts => contacts);\nexport { getContactMemo };\n","import style from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { handle } from 'managerToken/token';\nimport { asyncOperationGetContacts } from '../../redux/reduxContacts/contactsOperation';\nimport { actionAddContact } from 'redux/reduxContacts/contactsAction';\nimport { postAddNewContact } from 'data/api-contacts';\nimport { getContactMemo } from 'redux/reduxContacts/contact-selectors';\n\nfunction ContactForm() {\n  const { items } = useSelector(getContactMemo);\n\n  const {\n    logIn: { token },\n  } = useSelector(state => state);\n\n  const dispatch = useDispatch();\n  const onAdd = async newContact => {\n    await postAddNewContact(newContact);\n    dispatch(actionAddContact(newContact));\n  };\n\n  useEffect(() => {\n    if (token !== null || token !== '') {\n      handle.setToken(token);\n      dispatch(asyncOperationGetContacts());\n    }\n  }, [dispatch, token]);\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        console.log('Sorry, we are not have ' + name + '.');\n    }\n  };\n  const handleCheckUniqueContact = (arrayItems, nameContact) => {\n    const isExistContact = !!arrayItems.find(\n      contact => contact.name === nameContact,\n    );\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  const validateFrom = () => {\n    if (!name || !phone) {\n      toast('Some filed is empty');\n      return false;\n    }\n\n    return handleCheckUniqueContact(items, name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleFromSubmit = e => {\n    e.preventDefault();\n    const isValidForm = validateFrom();\n\n    if (!isValidForm) return;\n    const number = phone;\n    const newContact = { name, number };\n    resetForm();\n    return onAdd(newContact);\n  };\n\n  return (\n    <form onSubmit={handleFromSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeForm}\n      ></input>\n      <input\n        type=\"tel\"\n        name=\"phone\"\n        placeholder=\"Enter phone number\"\n        value={phone}\n        onChange={handleChangeForm}\n      ></input>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import {\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n} from '../reduxActions';\nimport { getAllContactsUser } from 'data/api-contacts';\n\nconst asyncOperationGetContacts = () => async dispatch => {\n  try {\n    dispatch(actionContactRequestStatus('request'));\n    const data = await getAllContactsUser();\n    dispatch(actionGetContactsSuccess(data));\n  } catch (error) {\n    dispatch(actionContactError([]));\n    dispatch(actionContactRequestStatus('error'));\n  } finally {\n    dispatch(actionContactRequestStatus('success'));\n  }\n};\n\nexport { asyncOperationGetContacts };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionAddNewUserSuccess = createAction('addUser/success', value => ({\n  payload: value,\n}));\nconst actionAddNewUserError = createAction('addUser/error', value => ({\n  payload: value,\n}));\nexport { actionAddNewUserSuccess, actionAddNewUserError };\n","import {\n  actionAddNewUserError,\n  actionAddNewUserSuccess,\n} from './reduxRegistrationAction';\nimport { postRegistUser } from 'data/api-contacts';\nimport { handle } from 'managerToken/token';\n\nconst asyncRegistNewUser = newUser => async dispatch => {\n  try {\n    const { token } = await postRegistUser(newUser);\n    handle.setToken(token);\n    dispatch(actionAddNewUserSuccess(true));\n  } catch (error) {\n    dispatch(actionAddNewUserError(false));\n  }\n};\n\nexport default asyncRegistNewUser;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport asyncRegistNewUser from 'redux/reduxRegistration/reduxRegistrationOperatiom';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  name: yup\n    .string('Enter your NickName')\n    .max(15, 'Nickname can not  be more than 15 charts')\n    .required('Nickname is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const { registration } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const onRegisteration = async dataFrom => {\n    dispatch(await asyncRegistNewUser(dataFrom));\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: 'name',\n      email: 'email',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: filledForm => {\n      onRegisteration(filledForm);\n    },\n  });\n\n  if (registration) {\n    toast('Registration was successful our congratulation');\n  }\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Input your future Nickname\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionSignInSuccess = createAction('signIn/success', value => ({\n  payload: value,\n}));\nconst actionSignInError = createAction('signIn/error', value => ({\n  payload: value,\n}));\nconst actionSignOutSuccess = createAction('signIn/success', value => ({\n  payload: value,\n}));\nconst actionSignOutError = createAction('signIn/error', value => ({\n  payload: value,\n}));\nexport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n};\n","import {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './reduxSignInAndOut.js';\nimport { postSignInUser, postSignOut } from 'data/api-contacts';\n\nimport { handle } from 'managerToken/token';\nconst asyncSignIn = newUser => async dispatch => {\n  try {\n    const {\n      user: { name },\n      token,\n    } = await postSignInUser(newUser);\n    handle.setToken(token);\n\n    dispatch(actionSignInSuccess({ name, token }));\n  } catch (error) {\n    dispatch(actionSignInError({ name: '', token: '' }));\n  }\n};\nconst asyncSignOut = newUser => async dispatch => {\n  try {\n    await postSignOut();\n    handle.removeToken();\n\n    dispatch(actionSignOutSuccess({ name: '', token: '' }));\n  } catch (error) {\n    console.log(error);\n    dispatch(actionSignOutError({ name: '', token: '' }));\n  }\n};\nexport { asyncSignIn, asyncSignOut };\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { asyncSignIn } from 'redux/reduxSignInAndOut/reduxSignInAndOutOperation';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const signIn = async privateData => {\n    dispatch(await asyncSignIn(privateData));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: 'email',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: emailPassword => {\n      signIn(emailPassword);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <TextField\n        fullWidth\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <TextField\n        fullWidth\n        id=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n      <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default SignInForm;\n","import { Link } from 'react-router-dom';\n\nconst NavigationLink = ({ to, text, name, onClick }) => {\n  return (\n    <div>\n      {name && <span>{name}</span>}\n      <Link to={to} onClick={onClick && onClick}>\n        {text}\n      </Link>\n    </div>\n  );\n};\nexport default NavigationLink;\n","import { useSelector, useDispatch } from 'react-redux';\nimport style from './NavigationLinks.module.css';\nimport NavigationLink from './NavigationLink/NavigationLink';\nimport { asyncSignOut } from 'redux/reduxSignInAndOut/reduxSignInAndOutOperation';\n\nconst NavigationLinks = () => {\n  const {\n    logIn: { token, name },\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const signOut = async () => {\n    dispatch(await asyncSignOut());\n  };\n  return (\n    <div className={style.navigation__wrapper}>\n      {token !== '' && <NavigationLink to={'/contacts'} text=\"Contacts\" />}\n      {token !== '' && (\n        <NavigationLink to={'/'} text=\"SignOut\" onClick={signOut} name={name} />\n      )}\n      {token === '' && <NavigationLink to={'/login'} text=\"LogIn\" />}\n      {token === '' && <NavigationLink to={'/register'} text=\"Register\" />}\n    </div>\n  );\n};\nexport default NavigationLinks;\n","import style from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionSetFilter } from '../../redux/reduxActions';\n\nconst Filter = () => {\n  const { filter } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const handleFilterChange = valueInput =>\n    dispatch(actionSetFilter(valueInput));\n  return (\n    <input\n      className={style.input__filter}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => handleFilterChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\nexport default Filter;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport ContactList from 'components/ContactList/ContactList.js';\nimport ContactForm from 'components/ContactForm/ContactForm.js';\nimport RegistrationForm from 'components/Registration/RegistrationForm';\nimport SignInForm from 'components/SignIn/SignIn';\nimport NavigationLinks from 'components/NavigationLinks/NavigationLinks';\nimport Filter from 'components/Filter/Filter.js';\nimport { useSelector } from 'react-redux';\nimport style from './App.module.css';\n\nfunction App() {\n  const {\n    logIn: { token },\n  } = useSelector(state => state);\n  return (\n    <BrowserRouter>\n      <Route path={'/'}>\n        <NavigationLinks />\n        <Switch>\n          <Route exact path=\"/login\">\n            <SignInForm />\n            {token !== '' && <Redirect to={'/contacts'} />}\n          </Route>\n          <Route exact path=\"/register\">\n            <RegistrationForm />\n          </Route>\n          {token !== '' && (\n            <Route path=\"/contacts\">\n              <h2>From Contact </h2>\n              <ContactForm />\n              <h2>Contacts list</h2>\n              <Filter />\n              <ContactList />\n            </Route>\n          )}\n        </Switch>\n      </Route>\n      <ToastContainer></ToastContainer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionAddNewUserError,\n  actionAddNewUserSuccess,\n} from './reduxRegistrationAction';\nconst reducerRegistration = createReducer(false, {\n  [actionAddNewUserSuccess]: (state, { payload }) => {\n    return payload;\n  },\n  [actionAddNewUserError]: (state, { payload }) => {\n    return payload;\n  },\n});\n\nexport default reducerRegistration;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './reduxSignInAndOut.js';\nconst reducerSignInAndOut = createReducer(\n  { name: '', token: '' },\n  {\n    [actionSignInSuccess]: (state, { payload }) => {\n      return payload;\n    },\n    [actionSignInError]: (state, { payload }) => {\n      return payload;\n    },\n    [actionSignOutSuccess]: (state, { payload }) => {\n      return payload;\n    },\n    [actionSignOutError]: (state, { payload }) => {\n      return payload;\n    },\n  },\n);\n\nexport default reducerSignInAndOut;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionAddContact,\n  actionRemoveContact,\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n} from './contactsAction.js';\n\nconst reducerContacts = createReducer([], {\n  [actionAddContact]: (state, { payload }) => {\n    const itemsAdd = [...state, payload];\n    return itemsAdd;\n  },\n  [actionRemoveContact]: (state, { payload }) => {\n    const itemsRemove = [...state.filter(contact => contact.id !== payload)];\n    return itemsRemove;\n  },\n  [actionGetContactsSuccess]: (state, { payload }) => {\n    return payload;\n  },\n  [actionContactError]: (state, { payload }) => {\n    return payload;\n  },\n});\nexport default reducerContacts;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducerRegistration from './reduxRegistration/reduxRegistrationReducer';\nimport reducerSignInAndOut from './reduxSignInAndOut/reduxSignInAndOutReducer';\nimport reducerContacts from './reduxContacts/contactsReducer';\nimport { actionSetFilter, actionContactRequestStatus } from './reduxActions';\n\nconst reducerFilter = createReducer('', {\n  [actionSetFilter]: (_, { payload }) => payload,\n});\nconst reducerLoading = createReducer('', {\n  [actionContactRequestStatus]: (_, { payload }) => payload,\n});\n\nconst contactPersistConfig = {\n  key: 'token',\n  storage: storage,\n};\n\nexport const rootReducer = combineReducers({\n  items: reducerContacts,\n  filter: reducerFilter,\n  isLoading: reducerLoading,\n  registration: reducerRegistration,\n  logIn: persistReducer(contactPersistConfig, reducerSignInAndOut),\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify here name, actionsBlacklist, actionsCreators and other options\n});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk),\n    // other store enhancers if any\n  ),\n);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}