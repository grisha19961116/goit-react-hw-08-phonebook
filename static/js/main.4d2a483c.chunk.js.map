{"version":3,"sources":["components/Filter/Filter.module.css","redux/reduxContacts/contactsAction.js","data-api/api-contacts.js","components/ContactList/ContactList.js","managerToken/token.js","redux/reduxActions.js","redux/reduxContacts/contact-selectors.js","components/ContactForm/ContactForm.jsx","redux/reduxContacts/contactsOperation.js","redux/reduxRegistration/reduxRegistrationAction.js","redux/reduxRegistration/reduxRegistrationOperatiom.js","components/Registration/RegistrationForm.jsx","redux/reduxSignInAndOut/reduxSignInAndOut.js","redux/reduxSignInAndOut/reduxSignInAndOutOperation.js","components/SignIn/SignIn.jsx","components/NavigationLinks/NavigationLink/NavigationLink.jsx","components/NavigationLinks/NavigationLinks.jsx","components/Filter/Filter.jsx","App.js","redux/reduxRegistration/reduxRegistrationReducer.js","redux/reduxSignInAndOut/reduxSignInAndOutReducer.js","redux/reduxContacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/SignIn/SignIn.module.css","components/Registration/RegistrationForm.module.css","components/NavigationLinks/NavigationLink/NavigationLink.module.css","components/NavigationLinks/NavigationLinks.module.css","App.module.css"],"names":["module","exports","actionAddContact","createAction","newContact","payload","actionRemoveContact","id","actionGetContactsSuccess","flag","contacts","actionContactError","value","axios","require","defaults","baseURL","postRegistUser","newUser","a","post","data","postSignInUser","privateData","postSignOut","postAddNewContact","console","log","deleteContact","delete","getAllContactsUser","get","ContactList","useSelector","state","items","filter","isLoading","dispatch","useDispatch","onRemove","idContact","renderList","array","filterInput","contact","name","toLowerCase","includes","getVisibleContacts","className","style","contactUl","map","number","contactLi","phone","onClick","p__delete","length","handle","token","headers","common","Authorization","actionSetFilter","actionContactRequestStatus","getContactMemo","createSelector","validationSchema","yup","required","min","ContactForm","logIn","onAdd","useEffect","formik","useFormik","initialValues","onSubmit","arrayItems","nameContact","isExistContact","find","alert","handleCheckUniqueContact","values","add_contact_form","handleSubmit","add_contact_input_wrapper","TextField","add_contact_input","label","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","add_contact_button","color","variant","actionAddNewUserSuccess","actionAddNewUserError","asyncRegistNewUser","email","max","password","RegistrationForm","registration","onRegisteration","dataFrom","filledForm","toast","signIn_form","signIn_input_wrapper","signIn_button","actionSignInSuccess","actionSignInError","actionSignOutSuccess","actionSignOutError","asyncSignIn","user","SignInForm","signIn","emailPassword","signIn_input","NavigationLink","to","text","link_wrapper","link_style","activeClassName","link_active_style","NavigationLinks","signOut","navigation__wrapper","usr_name","Filter","filter_form","onChangeCapture","target","fullWidth","App","path","exact","SignIn","title__form","title_list","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reducerRegistration","createReducer","reducerSignInAndOut","reducerContacts","reducerFilter","_","reducerLoading","contactPersistConfig","key","storage","rootReducer","combineReducers","persistReducer","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4d2a483c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_form\":\"Filter_filter_form__1ChpP\"};","import { createAction } from '@reduxjs/toolkit';\nconst actionAddContact = createAction('items/add', newContact => ({\n  payload: newContact,\n}));\nconst actionRemoveContact = createAction('items/remove', id => ({\n  payload: id,\n}));\n\nconst actionContactRequestStatus = createAction('items/request', flag => ({\n  payload: flag,\n}));\nconst actionGetContactsSuccess = createAction('items/success', contacts => ({\n  payload: contacts,\n}));\nconst actionContactError = createAction('items/error', value => ({\n  payload: value,\n}));\n\nexport {\n  actionAddContact,\n  actionRemoveContact,\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n};\n","const axios = require('axios');\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst postRegistUser = async newUser => {\n  const { data } = await axios.post(`/users/signup`, newUser);\n  return data;\n};\nconst postSignInUser = async privateData => {\n  const { data } = await axios.post(`/users/login`, privateData);\n  return data;\n};\nconst postSignOut = async () => {\n  await axios.post(`/users/logout`);\n};\nconst postAddNewContact = async newContact => {\n  console.log(newContact, `www`);\n  const data = await axios.post(`/contacts`, newContact);\n  console.log(data, `data`);\n};\nconst deleteContact = async id => {\n  console.log(id, `id`);\n  const data = await axios.delete(`/contacts/${id}`);\n  console.log(data, `data delete`);\n};\n\nconst getAllContactsUser = async () => {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n};\n\nexport {\n  postRegistUser,\n  postSignInUser,\n  postSignOut,\n  getAllContactsUser,\n  postAddNewContact,\n  deleteContact,\n};\n","import style from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionRemoveContact } from 'redux/reduxContacts/contactsAction';\nimport { deleteContact } from 'data-api/api-contacts';\n\nconst ContactList = () => {\n  const { items, filter, isLoading } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const onRemove = async idContact => {\n    await deleteContact(idContact);\n    dispatch(actionRemoveContact(idContact));\n  };\n\n  const getVisibleContacts = (items, filterInput) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filterInput.toLowerCase()),\n    );\n  };\n  const renderList = array => {\n    let data = array;\n    if (!data) {\n      data = getVisibleContacts(items, filter);\n    }\n    return (\n      <ul className={style.contactUl}>\n        {data.map(({ id, name, number }) => {\n          return (\n            <li className={style.contactLi} key={id}>\n              <p className={style.name}>{name}</p>\n              <p className={style.phone}>{number}</p>\n              <p\n                onClick={() => {\n                  onRemove(id);\n                }}\n                className={style.p__delete}\n              >\n                Delete\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  if (items.length === 0) return null;\n\n  return (\n    <>\n      <h2>{isLoading}</h2>\n      {filter !== '' && renderList(false)}\n      {filter === '' && renderList(items)}\n    </>\n  );\n};\n\nexport default ContactList;\n","const axios = require('axios');\nexport const handle = {\n  setToken(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  removeToken() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n","import { createAction } from '@reduxjs/toolkit';\nconst actionSetFilter = createAction('filter/addFilter', filter => ({\n  payload: filter,\n}));\nconst actionContactRequestStatus = createAction('items/request', flag => ({\n  payload: flag,\n}));\nconst actionGetContactsSuccess = createAction('items/success', contacts => ({\n  payload: contacts,\n}));\nconst actionContactError = createAction('items/error', value => ({\n  payload: value,\n}));\n\nexport {\n  actionSetFilter,\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n};\n","import { createSelector } from 'reselect';\nconst getContact = state => state;\nconst getContactMemo = createSelector([getContact], contacts => contacts);\nexport { getContactMemo };\n","import style from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { handle } from 'managerToken/token';\nimport { asyncOperationGetContacts } from '../../redux/reduxContacts/contactsOperation';\nimport { actionAddContact } from 'redux/reduxContacts/contactsAction';\nimport { postAddNewContact } from 'data-api/api-contacts';\nimport { getContactMemo } from 'redux/reduxContacts/contact-selectors';\nconst validationSchema = yup.object({\n  name: yup.string('Enter your name').required('Name is required'),\n  number: yup\n    .number('Enter your number')\n    .min(8, 'Number should be of minimum 8 characters length')\n    .required('Number is required'),\n});\n\nfunction ContactForm() {\n  const { items } = useSelector(getContactMemo);\n\n  const {\n    logIn: { token },\n  } = useSelector(state => state);\n\n  const dispatch = useDispatch();\n  const onAdd = async newContact => {\n    await postAddNewContact(newContact);\n    dispatch(actionAddContact(newContact));\n  };\n\n  useEffect(() => {\n    if (token !== null || token !== '') {\n      handle.setToken(token);\n      dispatch(asyncOperationGetContacts());\n    }\n  }, [dispatch, token]);\n\n  const handleCheckUniqueContact = (arrayItems, nameContact) => {\n    const isExistContact = !!arrayItems.find(\n      contact => contact.name === nameContact,\n    );\n    isExistContact && alert('Contact name is already exist');\n\n    return !isExistContact;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: ({ name, number }) => {\n      const isExistContact = handleCheckUniqueContact(items, name);\n      const newContact = { name, number };\n      if (!isExistContact) {\n        return;\n      }\n      formik.values.name = '';\n      formik.values.number = '';\n      return onAdd(newContact);\n    },\n  });\n\n  return (\n    <form className={style.add_contact_form} onSubmit={formik.handleSubmit}>\n      <div className={style.add_contact_input_wrapper}>\n        <TextField\n          className={style.add_contact_input}\n          id=\"name\"\n          name=\"name\"\n          label=\"Name...\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          className={style.add_contact_input}\n          id=\"number\"\n          name=\"number\"\n          label=\"Number...\"\n          type=\"tel\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n        />\n      </div>\n      <Button\n        className={style.add_contact_button}\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Add Contact\n      </Button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import {\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n} from '../reduxActions';\nimport { getAllContactsUser } from 'data-api/api-contacts';\n\nconst asyncOperationGetContacts = () => async dispatch => {\n  try {\n    dispatch(actionContactRequestStatus('request'));\n    const data = await getAllContactsUser();\n    dispatch(actionGetContactsSuccess(data));\n  } catch (error) {\n    dispatch(actionContactError([]));\n    dispatch(actionContactRequestStatus('error'));\n  } finally {\n    dispatch(actionContactRequestStatus('success'));\n  }\n};\n\nexport { asyncOperationGetContacts };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionAddNewUserSuccess = createAction('addUser/success', value => ({\n  payload: value,\n}));\nconst actionAddNewUserError = createAction('addUser/error', value => ({\n  payload: value,\n}));\nexport { actionAddNewUserSuccess, actionAddNewUserError };\n","import {\n  actionAddNewUserError,\n  actionAddNewUserSuccess,\n} from './reduxRegistrationAction';\nimport { postRegistUser } from 'data-api/api-contacts';\nimport { handle } from 'managerToken/token';\n\nconst asyncRegistNewUser = newUser => async dispatch => {\n  try {\n    const { token } = await postRegistUser(newUser);\n    handle.setToken(token);\n    dispatch(actionAddNewUserSuccess(true));\n  } catch (error) {\n    dispatch(actionAddNewUserError(false));\n  } finally {\n    dispatch(actionAddNewUserSuccess(false));\n  }\n};\n\nexport default asyncRegistNewUser;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport asyncRegistNewUser from 'redux/reduxRegistration/reduxRegistrationOperatiom';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport style from './RegistrationForm.module.css';\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  name: yup\n    .string('Enter your NickName')\n    .max(15, 'Nickname can not  be more than 15 charts')\n    .required('Nickname is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const { registration } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const onRegisteration = async dataFrom => {\n    dispatch(await asyncRegistNewUser(dataFrom));\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: filledForm => {\n      onRegisteration(filledForm);\n    },\n  });\n\n  if (registration) {\n    toast('Registration was successful our congratulation');\n  }\n\n  return (\n    <div>\n      <form className={style.signIn_form} onSubmit={formik.handleSubmit}>\n        <div className={style.signIn_input_wrapper}>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            label=\"Name...\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email...\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password...\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n        </div>\n        <Button\n          className={style.signIn_button}\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionSignInSuccess = createAction('signIn/success', value => ({\n  payload: value,\n}));\nconst actionSignInError = createAction('signIn/error', value => ({\n  payload: value,\n}));\nconst actionSignOutSuccess = createAction('signIn/success', value => ({\n  payload: value,\n}));\nconst actionSignOutError = createAction('signIn/error', value => ({\n  payload: value,\n}));\nexport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n};\n","import {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './reduxSignInAndOut.js';\nimport { postSignInUser, postSignOut } from 'data-api/api-contacts';\n\nimport { handle } from 'managerToken/token';\nconst asyncSignIn = newUser => async dispatch => {\n  try {\n    const {\n      user: { name },\n      token,\n    } = await postSignInUser(newUser);\n    handle.setToken(token);\n\n    dispatch(actionSignInSuccess({ name, token }));\n  } catch (error) {\n    dispatch(actionSignInError({ name: '', token: '' }));\n  }\n};\nconst asyncSignOut = newUser => async dispatch => {\n  try {\n    await postSignOut();\n    handle.removeToken();\n\n    dispatch(actionSignOutSuccess({ name: '', token: '' }));\n  } catch (error) {\n    console.log(error);\n    dispatch(actionSignOutError({ name: '', token: '' }));\n  }\n};\nexport { asyncSignIn, asyncSignOut };\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { asyncSignIn } from 'redux/reduxSignInAndOut/reduxSignInAndOutOperation';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport style from './SignIn.module.css';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const signIn = async privateData => {\n    dispatch(await asyncSignIn(privateData));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: emailPassword => {\n      signIn(emailPassword);\n    },\n  });\n\n  return (\n    <form className={style.signIn_form} onSubmit={formik.handleSubmit}>\n      <div className={style.signIn_input_wrapper}>\n        <TextField\n          className={style.signIn_input}\n          id=\"email\"\n          name=\"email\"\n          label=\"Email...\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          className={style.signIn_input}\n          id=\"password\"\n          name=\"password\"\n          label=\"Password...\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </div>\n      <Button\n        className={style.signIn_button}\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default SignInForm;\n","import { NavLink } from 'react-router-dom';\nimport style from './NavigationLink.module.css';\n\nconst NavigationLink = ({ to, text, onClick }) => {\n  return (\n    <div className={style.link_wrapper}>\n      <NavLink\n        className={style.link_style}\n        activeClassName={text !== 'SignOut' && style.link_active_style}\n        to={to}\n        onClick={onClick && onClick}\n      >\n        {text}\n      </NavLink>\n    </div>\n  );\n};\nexport default NavigationLink;\n","import { useSelector, useDispatch } from 'react-redux';\nimport style from './NavigationLinks.module.css';\nimport NavigationLink from './NavigationLink/NavigationLink';\nimport { asyncSignOut } from 'redux/reduxSignInAndOut/reduxSignInAndOutOperation';\n\nconst NavigationLinks = () => {\n  const {\n    logIn: { token, name },\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const signOut = async () => {\n    dispatch(await asyncSignOut());\n  };\n  return (\n    <div className={style.navigation__wrapper}>\n      {token !== '' && (\n        <>\n          {name && <span className={style.usr_name}>{`<<${name}>>`}</span>}\n          <NavigationLink\n            to={'/'}\n            text=\"SignOut\"\n            onClick={signOut}\n            name={name}\n          />\n        </>\n      )}\n      {token === '' && <NavigationLink to={'/login'} text=\"LogIn\" />}\n      {token === '' && <NavigationLink to={'/register'} text=\"Register\" />}\n    </div>\n  );\n};\nexport default NavigationLinks;\n","import style from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { actionSetFilter } from 'redux/reduxActions';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Field from '@material-ui/core/TextField';\nconst validationSchema = yup.object({\n  name: yup.string('Enter your name').required('Name is required'),\n});\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = valueInput =>\n    dispatch(actionSetFilter(valueInput));\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: validationSchema,\n    onChange: value => {},\n  });\n\n  return (\n    <form\n      className={style.filter_form}\n      onChangeCapture={({ target: { value } }) => handleFilterChange(value)}\n    >\n      <Field\n        fullWidth\n        id=\"name\"\n        name=\"name\"\n        value={formik.values.name}\n        onChangeCapture={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n    </form>\n  );\n};\nexport default Filter;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport ContactList from 'components/ContactList/ContactList.js';\nimport ContactForm from 'components/ContactForm/ContactForm.jsx';\nimport RegistrationForm from 'components/Registration/RegistrationForm';\nimport SignInForm from 'components/SignIn/SignIn';\nimport NavigationLinks from 'components/NavigationLinks/NavigationLinks';\nimport Filter from 'components/Filter/Filter.jsx';\nimport { useSelector } from 'react-redux';\nimport style from './App.module.css';\n\nfunction App() {\n  const {\n    logIn: { token },\n    registration,\n  } = useSelector(state => state);\n  return (\n    <BrowserRouter>\n      <Route path={'/'}>\n        <NavigationLinks />\n        <Switch>\n          <Route exact path=\"/login\">\n            <SignInForm />\n            {token !== '' && <Redirect to={'/contacts'} />}\n          </Route>\n          <Route exact path=\"/register\">\n            <RegistrationForm />\n            {registration && <Redirect to={'/login'} />}\n          </Route>\n          {token !== '' && (\n            <Route path=\"/contacts\">\n              <h2 className={style.title__form}>From Contact </h2>\n              <ContactForm />\n              <h2 className={style.title_list}>Contacts list</h2>\n              <Filter />\n              <ContactList />\n            </Route>\n          )}\n        </Switch>\n      </Route>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionAddNewUserError,\n  actionAddNewUserSuccess,\n} from './reduxRegistrationAction';\nconst reducerRegistration = createReducer(false, {\n  [actionAddNewUserSuccess]: (state, { payload }) => {\n    return payload;\n  },\n  [actionAddNewUserError]: (state, { payload }) => {\n    return payload;\n  },\n});\n\nexport default reducerRegistration;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './reduxSignInAndOut.js';\nconst reducerSignInAndOut = createReducer(\n  { name: '', token: '' },\n  {\n    [actionSignInSuccess]: (state, { payload }) => {\n      return payload;\n    },\n    [actionSignInError]: (state, { payload }) => {\n      return payload;\n    },\n    [actionSignOutSuccess]: (state, { payload }) => {\n      return payload;\n    },\n    [actionSignOutError]: (state, { payload }) => {\n      return payload;\n    },\n  },\n);\n\nexport default reducerSignInAndOut;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionAddContact,\n  actionRemoveContact,\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n} from './contactsAction.js';\n\nconst reducerContacts = createReducer([], {\n  [actionAddContact]: (state, { payload }) => {\n    const itemsAdd = [...state, payload];\n    return itemsAdd;\n  },\n  [actionRemoveContact]: (state, { payload }) => {\n    const itemsRemove = [...state.filter(contact => contact.id !== payload)];\n    return itemsRemove;\n  },\n  [actionGetContactsSuccess]: (state, { payload }) => {\n    return payload;\n  },\n  [actionContactError]: (state, { payload }) => {\n    return payload;\n  },\n});\nexport default reducerContacts;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducerRegistration from './reduxRegistration/reduxRegistrationReducer';\nimport reducerSignInAndOut from './reduxSignInAndOut/reduxSignInAndOutReducer';\nimport reducerContacts from './reduxContacts/contactsReducer';\nimport { actionSetFilter, actionContactRequestStatus } from './reduxActions';\n\nconst reducerFilter = createReducer('', {\n  [actionSetFilter]: (_, { payload }) => payload,\n});\nconst reducerLoading = createReducer('', {\n  [actionContactRequestStatus]: (_, { payload }) => payload,\n});\n\nconst contactPersistConfig = {\n  key: 'token',\n  storage: storage,\n};\n\nexport const rootReducer = combineReducers({\n  items: reducerContacts,\n  filter: reducerFilter,\n  isLoading: reducerLoading,\n  registration: reducerRegistration,\n  logIn: persistReducer(contactPersistConfig, reducerSignInAndOut),\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify here name, actionsBlacklist, actionsCreators and other options\n});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk),\n    // other store enhancers if any\n  ),\n);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactUl\":\"ContactList_contactUl__1urLD\",\"contactLi\":\"ContactList_contactLi__3njYQ\",\"name\":\"ContactList_name__3a_Rm\",\"phone\":\"ContactList_phone__2lajq\",\"p__delete\":\"ContactList_p__delete__2O4dw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_contact_form\":\"ContactForm_add_contact_form__2TE_D\",\"add_contact_input\":\"ContactForm_add_contact_input__21tSg\",\"add_contact_input_wrapper\":\"ContactForm_add_contact_input_wrapper__2pPwe\",\"add_contact_button\":\"ContactForm_add_contact_button__11Kfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn_form\":\"SignIn_signIn_form__3Cnst\",\"signIn_input\":\"SignIn_signIn_input__3OMgB\",\"signIn_input_wrapper\":\"SignIn_signIn_input_wrapper__2zZ4j\",\"signIn_button\":\"SignIn_signIn_button__FSTgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn_form\":\"RegistrationForm_signIn_form__fQZla\",\"signIn_input\":\"RegistrationForm_signIn_input__3lCIE\",\"signIn_input_wrapper\":\"RegistrationForm_signIn_input_wrapper__vtfu9\",\"signIn_button\":\"RegistrationForm_signIn_button__2EnFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link_wrapper\":\"NavigationLink_link_wrapper__1T7mh\",\"link_style\":\"NavigationLink_link_style__2da1T\",\"link_active_style\":\"NavigationLink_link_active_style__3Vfxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation__wrapper\":\"NavigationLinks_navigation__wrapper__1Drd3\",\"usr_name\":\"NavigationLinks_usr_name__3bI5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__form\":\"App_title__form__zw0sX\",\"title_list\":\"App_title_list__2x-B5\"};"],"sourceRoot":""}