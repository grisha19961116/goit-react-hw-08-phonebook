{"version":3,"sources":["components/Filter/Filter.module.css","components/Loader/Loader.module.css","components/ContactTable/ContactTable.module.css","redux/contacts/selectors.js","redux/contacts/actions.js","data-api/api-contacts.js","components/ContactTable/ContactTable.jsx","managerToken/token.js","redux/loading/actions.js","redux/authorization/selectors.js","components/ContactForm/ContactForm.jsx","redux/contacts/operations.js","redux/authorization/actions.js","redux/authorization/operations.js","components/Registration/RegistrationForm.jsx","components/SignIn/SignIn.jsx","components/NavigationLinks/NavigationLink/NavigationLink.jsx","components/NavigationLinks/NavigationLinks.jsx","redux/filter/actions.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","redux/loading/selectors.js","App.js","redux/authorization/reducer.js","redux/contacts/reducer.js","redux/filter/reducer.js","redux/loading/reducer.js","redux/rootReducer/rootReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/SignIn/SignIn.module.css","components/Registration/RegistrationForm.module.css","components/NavigationLinks/NavigationLink/NavigationLink.module.css","components/NavigationLinks/NavigationLinks.module.css","App.module.css"],"names":["module","exports","getContact","state","contacts","getContactMemo","createSelector","getVisibleContactsMemo","filter","contact","name","toLowerCase","includes","actionAddContact","createAction","newContact","payload","actionRemoveContact","id","actionUpdateContact","actionGetContacts","axios","require","defaults","baseURL","postRegistUser","user","a","post","data","postSignInUser","credentials","postSignOut","postAddNewContact","deleteContact","delete","updateContact","patch","getAllContactsUser","get","myRef","createRef","ContactTable","visibleContacts","useSelector","useState","setId","isOpen","setIsOpen","refInput","setRefInput","dispatch","useDispatch","onRemove","idUp","onOpenUpdate","i","inputOne","document","getElementById","inputSecond","current","ref","tdUpdate","tdName","tdNumber","tdDelete","checkOne","checkSecond","append","value","number","check","classList","remove","style","input_hidden","contact_update","add","delete_no_cursor","input_active","contact_update_active","textContent","contactUp","length","className","contact_table","map","contact_tbody_tr","contact_name","type","defaultValue","contact_number","onClick","contact_delete","handleAxios","token","headers","common","Authorization","actionIsLoading","flag","getToken","logIn","getName","getEmail","email","validationSchema","yup","required","min","max","matches","ContactForm","onAddContact","useEffect","console","error","formik","useFormik","initialValues","onSubmit","isExistContact","isExistName","some","isExistPhone","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleCheckUniqueContact","values","add_contact_form","handleSubmit","add_contact_input_wrapper","TextField","add_contact_input","label","onChange","handleChange","touched","Boolean","errors","helperText","Button","add_contact_button","color","variant","actionSignInSuccess","actionSignInError","actionSignOutSuccess","actionSignOutError","asyncSignOut","info","asyncSignIn","userName","success","asyncRegistNewUser","password","RegistrationForm","onRegisteration","filledForm","signIn_form","signIn_input_wrapper","signIn_button","SignInForm","signIn","emailLc","signIn_input","NavigationLink","to","text","link_wrapper","link_style","activeClassName","link_active_style","NavigationLinks","signOut","navigation__wrapper","usr_name","actionSetFilter","Filter","filter_form","onChangeCapture","target","fullWidth","Load","s","loader","height","width","timeout","getLoad","isLoading","App","path","exact","SignIn","title__form","title_list","Loader","initialState","reducerSignInAndOut","createReducer","_","reducerContacts","index","find","contactUpdate","reducerFilter","reducerLoading","contactPersistConfig","key","storage","rootReducer","combineReducers","persistReducer","reducerAuthorization","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","newestOnTop","rtl","pauseOnFocusLoss"],"mappings":"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","file":"static/js/main.ef88b745.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_form\":\"Filter_filter_form__1ChpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3G5A0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_table\":\"ContactTable_contact_table__2QUUP\",\"contact_name\":\"ContactTable_contact_name__2L-RQ\",\"contact_number\":\"ContactTable_contact_number__3i8v6\",\"input_hidden\":\"ContactTable_input_hidden__3UPS8\",\"input_active\":\"ContactTable_input_active__3MUFz\",\"contact_update\":\"ContactTable_contact_update__3pFrY\",\"contact_update_active\":\"ContactTable_contact_update_active__3asIU\",\"contact_delete\":\"ContactTable_contact_delete__2zHtl\",\"delete_no_cursor\":\"ContactTable_delete_no_cursor__GRQrA\"};","import { createSelector } from 'reselect';\n\nconst getContact = state => state.contacts;\nconst getState = state => state;\nconst getFilter = state => state.filter;\nconst getContactMemo = createSelector([getContact], contacts => contacts);\n\nconst getVisibleContactsMemo = createSelector(\n  [getContact, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n\nexport { getContactMemo, getState, getVisibleContactsMemo };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionAddContact = createAction('contacts/add', newContact => ({\n  payload: newContact,\n}));\n\nconst actionRemoveContact = createAction('contacts/remove', id => ({\n  payload: id,\n}));\n\nconst actionUpdateContact = createAction('contacts/update', contact => ({\n  payload: contact,\n}));\n\nconst actionGetContacts = createAction('contacts/get', contacts => ({\n  payload: contacts,\n}));\n\nexport {\n  actionAddContact,\n  actionRemoveContact,\n  actionUpdateContact,\n  actionGetContacts,\n};\n","const axios = require('axios');\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst postRegistUser = async user => {\n  const { data } = await axios.post(`/users/signup`, user);\n  return data;\n};\nconst postSignInUser = async credentials => {\n  const { data } = await axios.post(`/users/login`, credentials);\n  return data;\n};\nconst postSignOut = async () => await axios.post(`/users/logout`);\n\nconst postAddNewContact = async contact => {\n  const { data } = await axios.post(`/contacts`, contact);\n  return data;\n};\n\nconst deleteContact = async id => await axios.delete(`/contacts/${id}`);\n\nconst updateContact = async (id, contact) =>\n  await axios.patch(`/contacts/${id}`, contact);\n\nconst getAllContactsUser = async () => {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n};\n\nexport {\n  postRegistUser,\n  postSignInUser,\n  postSignOut,\n  getAllContactsUser,\n  postAddNewContact,\n  updateContact,\n  deleteContact,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, createRef } from 'react';\n\nimport style from './ContactTable.module.css';\nimport { getVisibleContactsMemo } from '../../redux/contacts/selectors';\nimport {\n  actionRemoveContact,\n  actionUpdateContact,\n} from 'redux/contacts/actions';\nimport { deleteContact, updateContact } from 'data-api/api-contacts';\n\nconst myRef = createRef();\n\nconst ContactTable = () => {\n  const visibleContacts = useSelector(getVisibleContactsMemo);\n  const [id, setId] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [refInput, setRefInput] = useState(false);\n  const dispatch = useDispatch();\n\n  const onRemove = async idUp => {\n    if (id && id !== idUp) return;\n    await deleteContact(idUp);\n    dispatch(actionRemoveContact(idUp));\n  };\n\n  const onOpenUpdate = async (idUp, i) => {\n    if (id && id !== idUp) return;\n    if (!refInput) {\n      const inputOne = document.getElementById(i + 'first');\n      const inputSecond = document.getElementById(i + 'second');\n      myRef.current = { inputOne, inputSecond };\n      setRefInput(true);\n    }\n    const ref = myRef.current;\n\n    const tdUpdate = document.getElementById(i + 'td-update');\n    const tdName = document.getElementById(i + 'td-name');\n    const tdNumber = document.getElementById(i + 'td-number');\n    const tdDelete = document.getElementById(i + 'td-delete');\n    const checkOne = document.getElementById(i + 'first');\n    const checkSecond = document.getElementById(i + 'second');\n    if (!checkOne && !checkSecond) {\n      tdName.append(ref.inputOne);\n      tdNumber.append(ref.inputSecond);\n    }\n    if (checkOne && checkSecond) {\n      myRef.current = { inputOne: checkOne, inputSecond: checkSecond };\n    }\n    let { inputOne, inputSecond } = myRef.current;\n    const name = inputOne.value;\n    const number = inputSecond.value;\n\n    setId(idUp);\n    let check = isOpen;\n    check = !check;\n    setIsOpen(() => check);\n    // inputOne.defaultValue = name\n    // inputSecond.defaultValue = number\n    if (check) {\n      inputOne.classList.remove(style.input_hidden);\n      inputSecond.classList.remove(style.input_hidden);\n      tdUpdate.classList.remove(style.contact_update);\n      tdDelete.classList.add(style.delete_no_cursor);\n      inputOne.classList.add(style.input_active);\n      inputSecond.classList.add(style.input_active);\n      tdUpdate.classList.add(style.contact_update_active);\n      tdUpdate.textContent = 'Done';\n    }\n    if (!check) {\n      const contactUp = { name, number };\n      await updateContact(idUp, contactUp);\n      const contact = { id: idUp, name, number };\n      dispatch(actionUpdateContact(contact));\n      tdName.textContent = name;\n      tdNumber.textContent = number;\n      inputOne.classList.remove(style.input_active);\n      inputSecond.classList.remove(style.input_active);\n      tdDelete.classList.remove(style.delete_no_cursor);\n      tdUpdate.classList.remove(style.contact_update_active);\n      inputOne.classList.add(style.input_hidden);\n      inputSecond.classList.add(style.input_hidden);\n      tdUpdate.classList.add(style.contact_update);\n      tdUpdate.textContent = 'Update';\n      setId(null);\n    }\n  };\n\n  return visibleContacts.length !== 0 ? (\n    <table className={style.contact_table}>\n      <tbody>\n        {visibleContacts.map(({ id, name, number }, i) => {\n          return (\n            <tr className={style.contact_tbody_tr} key={i}>\n              <td id={i + 'td-name'} className={style.contact_name}>\n                {name}\n                <input\n                  id={i + 'first'}\n                  className={style.input_hidden}\n                  type=\"text\"\n                  defaultValue=\"\"\n                ></input>\n              </td>\n              <td id={i + 'td-number'} className={style.contact_number}>\n                {number}\n                <input\n                  id={i + 'second'}\n                  className={style.input_hidden}\n                  type=\"tel\"\n                  defaultValue=\"\"\n                ></input>\n              </td>\n              <td\n                id={i + 'td-update'}\n                className={style.contact_update}\n                onClick={() => onOpenUpdate(id, i)}\n              >\n                Update\n              </td>\n              <td\n                id={i + 'td-delete'}\n                className={style.contact_delete}\n                onClick={() => onRemove(id)}\n              >\n                Delete\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  ) : null;\n};\n\nexport default ContactTable;\n","const axios = require('axios');\n\nexport const handleAxios = {\n  setToken(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  removeToken() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionIsLoading = createAction('contacts/loading', flag => ({\n  payload: flag,\n}));\n\nexport { actionIsLoading };\n","const getToken = state => state.logIn.token;\nconst getName = state => state.logIn.name;\nconst getEmail = state => state.logIn.email;\n\nexport { getToken, getName, getEmail };\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { toast } from 'react-toastify';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport style from './ContactForm.module.css';\nimport { handleAxios } from 'managerToken/token';\nimport { asyncOperationGetContacts } from '../../redux/contacts/operations';\nimport { actionAddContact } from 'redux/contacts/actions';\nimport { postAddNewContact } from 'data-api/api-contacts';\nimport { getToken } from 'redux/authorization/selectors';\nimport { getContactMemo } from 'redux/contacts/selectors';\n\nconst phoneRegExp = '^[0-9]+$';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string('Enter your name')\n    .required('Name is required')\n    .min(3, 'Minimal length 3')\n    .max(14, 'Maximal length 14'),\n  number: yup\n    .string('Enter your number')\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required('Number is required')\n    .min(10, 'Number should has 10 characters')\n    .max(10, 'Number should has 10 characters'),\n});\n\nfunction ContactForm() {\n  const contacts = useSelector(getContactMemo);\n  const token = useSelector(getToken);\n\n  const dispatch = useDispatch();\n  const onAddContact = async contact => {\n    const data = await postAddNewContact(contact);\n    dispatch(actionAddContact(data));\n  };\n\n  useEffect(() => {\n    if (token !== null || token !== '') {\n      handleAxios.setToken(token);\n      dispatch(asyncOperationGetContacts());\n    }\n  }, [dispatch, token]);\n\n  const handleCheckUniqueContact = (name, number) => {\n    const isExistName = contacts.some(contact => contact.name === name);\n    const isExistPhone = contacts.some(contact => contact.number === number);\n    isExistName &&\n      toast.warn('⚠️ You have contact with same name!', {\n        position: 'bottom-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    isExistPhone &&\n      toast.error('🚀 Number has been using!', {\n        position: 'bottom-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    return !isExistPhone;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: ({ name, number }) => {\n      const isExistContact = handleCheckUniqueContact(name, number);\n      const contact = { name, number };\n      if (!isExistContact) return;\n      formik.values.name = '';\n      formik.values.number = '';\n      return onAddContact(contact);\n    },\n  });\n\n  return (\n    <form className={style.add_contact_form} onSubmit={formik.handleSubmit}>\n      <div className={style.add_contact_input_wrapper}>\n        <TextField\n          className={style.add_contact_input}\n          id=\"name\"\n          name=\"name\"\n          label=\"Name...\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          className={style.add_contact_input}\n          id=\"number\"\n          name=\"number\"\n          label=\"Number...\"\n          type=\"tel\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n        />\n      </div>\n      <Button\n        className={style.add_contact_button}\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Create\n      </Button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { actionGetContacts } from './actions';\nimport { actionIsLoading } from '../loading/actions';\nimport { getAllContactsUser } from 'data-api/api-contacts';\n\nconst asyncOperationGetContacts = () => async dispatch => {\n  try {\n    dispatch(actionIsLoading(true));\n    const data = await getAllContactsUser();\n    dispatch(actionGetContacts(data));\n  } catch (err) {\n    console.error(err);\n  } finally {\n    dispatch(actionIsLoading(false));\n  }\n};\n\nexport { asyncOperationGetContacts };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionSignInSuccess = createAction('signIn/success', value => ({\n  payload: value,\n}));\nconst actionSignInError = createAction('signIn/error', value => ({\n  payload: value,\n}));\nconst actionSignOutSuccess = createAction('signOut/success', value => ({\n  payload: value,\n}));\nconst actionSignOutError = createAction('signOut/error', value => ({\n  payload: value,\n}));\n\nexport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n};\n","import { toast } from 'react-toastify';\nimport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './actions.js';\nimport {\n  postSignInUser,\n  postSignOut,\n  postRegistUser,\n} from 'data-api/api-contacts';\n\nimport { handleAxios } from 'managerToken/token';\n\nconst asyncSignOut = name => async dispatch => {\n  let check = null;\n  try {\n    await postSignOut();\n    handleAxios.removeToken();\n    dispatch(actionSignOutSuccess());\n    check = true;\n  } catch (err) {\n    check = false;\n    dispatch(actionSignOutError());\n  } finally {\n    check === true &&\n      toast.info(`👋 Goodby darling <<${name}>> !`, {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    check === false &&\n      toast.error('🚀 Server error!', {\n        position: 'bottom-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n  }\n};\n\nconst asyncSignIn = credentials => async dispatch => {\n  let userName = null;\n  try {\n    const {\n      token,\n      user: { name, email },\n    } = await postSignInUser(credentials);\n    handleAxios.setToken(token);\n    dispatch(actionSignInSuccess({ name, token, email }));\n    userName = name;\n  } catch (err) {\n    userName = null;\n    dispatch(actionSignInError());\n  } finally {\n    userName &&\n      toast.success(`🤟 Hello darling <<${userName}>> !`, {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    !userName &&\n      toast.error('🚀 Wrong credentials!', {\n        position: 'top-center',\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n  }\n};\n\nconst asyncRegistNewUser = user => async dispatch => {\n  const { name, email } = user;\n  try {\n    const { token } = await postRegistUser(user);\n    handleAxios.setToken(token);\n    dispatch(actionSignInSuccess({ name, token, email }));\n    toast.success(`🦄 Hello darling ${name} !`, {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  } catch (error) {\n    dispatch(actionSignInError());\n    toast.warn(`⚠️${email} Is right email?`, {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n};\n\nexport { asyncSignIn, asyncSignOut, asyncRegistNewUser };\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { asyncRegistNewUser } from 'redux/authorization/operations';\nimport style from './RegistrationForm.module.css';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  name: yup\n    .string('Enter your NickName')\n    .max(15, 'Nickname can not  be more than 15 charts')\n    .required('Nickname is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const onRegisteration = async user => {\n    dispatch(await asyncRegistNewUser(user));\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: filledForm => {\n      onRegisteration(filledForm);\n    },\n  });\n\n  return (\n    <div>\n      <form className={style.signIn_form} onSubmit={formik.handleSubmit}>\n        <div className={style.signIn_input_wrapper}>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            label=\"Name...\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email...\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password...\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n        </div>\n        <Button\n          className={style.signIn_button}\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getEmail } from 'redux/authorization/selectors';\nimport { asyncSignIn } from 'redux/authorization/operations';\nimport style from './SignIn.module.css';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .max(20, 'Password should be less 20 characters')\n    .required('Password is required'),\n});\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const signIn = async credentials => {\n    dispatch(await asyncSignIn(credentials));\n  };\n  const emailLc = useSelector(getEmail);\n\n  const formik = useFormik({\n    initialValues: {\n      email: emailLc !== '' ? emailLc : '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: credentials => signIn(credentials),\n  });\n\n  return (\n    <form className={style.signIn_form} onSubmit={formik.handleSubmit}>\n      <div className={style.signIn_input_wrapper}>\n        <TextField\n          className={style.signIn_input}\n          id=\"email\"\n          name=\"email\"\n          label=\"Email...\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          className={style.signIn_input}\n          id=\"password\"\n          name=\"password\"\n          label=\"Password...\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </div>\n      <Button\n        className={style.signIn_button}\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default SignInForm;\n","import { NavLink } from 'react-router-dom';\n\nimport style from './NavigationLink.module.css';\n\nconst NavigationLink = ({ to, text, onClick }) => {\n  return (\n    <div className={style.link_wrapper}>\n      <NavLink\n        className={style.link_style}\n        activeClassName={text !== 'SignOut' ? style.link_active_style : ''}\n        to={to}\n        onClick={onClick && onClick}\n      >\n        {text}\n      </NavLink>\n    </div>\n  );\n};\nexport default NavigationLink;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport style from './NavigationLinks.module.css';\nimport NavigationLink from './NavigationLink/NavigationLink';\nimport { asyncSignOut } from 'redux/authorization/operations';\nimport { getToken, getName } from 'redux/authorization/selectors';\n\nconst NavigationLinks = () => {\n  const token = useSelector(getToken);\n  const name = useSelector(getName);\n  const dispatch = useDispatch();\n  const signOut = async () => {\n    dispatch(await asyncSignOut(name));\n  };\n  return (\n    <div className={style.navigation__wrapper}>\n      {token !== '' && (\n        <>\n          {name && <span className={style.usr_name}>{`<<${name}>>`}</span>}\n          <NavigationLink\n            to={'/login'}\n            text=\"SignOut\"\n            onClick={signOut}\n            name={name}\n          />\n        </>\n      )}\n      {token === '' && <NavigationLink to={'/login'} text=\"LogIn\" />}\n      {token === '' && <NavigationLink to={'/register'} text=\"Register\" />}\n    </div>\n  );\n};\nexport default NavigationLinks;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionSetFilter = createAction('filter/addFilter', filter => ({\n  payload: filter,\n}));\n\nexport { actionSetFilter };\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Field from '@material-ui/core/TextField';\n\nimport style from './Filter.module.css';\nimport { actionSetFilter } from 'redux/filter/actions';\nconst validationSchema = yup.object({\n  name: yup.string('Enter your name').required('Name is required'),\n});\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = valueInput =>\n    dispatch(actionSetFilter(valueInput));\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: validationSchema,\n    onChange: value => {},\n  });\n\n  return (\n    <form\n      className={style.filter_form}\n      onChangeCapture={({ target: { value } }) => handleFilterChange(value)}\n    >\n      <Field\n        fullWidth\n        id=\"name\"\n        name=\"name\"\n        value={formik.values.name}\n        onChangeCapture={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n    </form>\n  );\n};\nexport default Filter;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nimport s from './Loader.module.css';\n\nconst Load = () => {\n  return (\n    <Loader\n      className={s.loader}\n      type=\"Puff\"\n      color=\"#0ca0f5\"\n      height={100}\n      width={100}\n      timeout={300000}\n    />\n  );\n};\nexport default Load;\n","const getLoad = state => state.isLoading;\n\nexport { getLoad };\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport ContactTable from 'components/ContactTable/ContactTable.jsx';\nimport ContactForm from 'components/ContactForm/ContactForm.jsx';\nimport RegistrationForm from 'components/Registration/RegistrationForm';\nimport SignInForm from 'components/SignIn/SignIn';\nimport NavigationLinks from 'components/NavigationLinks/NavigationLinks';\nimport Filter from 'components/Filter/Filter.jsx';\nimport Loader from 'components/Loader/Loader.jsx';\nimport { getToken } from 'redux/authorization/selectors';\nimport { getLoad } from 'redux/loading/selectors';\nimport style from './App.module.css';\n\nfunction App() {\n  const token = useSelector(getToken);\n  const isLoading = useSelector(getLoad);\n\n  return (\n    <Route path={'/'}>\n      <NavigationLinks />\n      <Switch>\n        {token !== '' && (\n          <Route exact path=\"/\">\n            <Redirect to={'/contacts'} />\n          </Route>\n        )}\n        {token === '' && (\n          <Route exact path=\"/contacts\">\n            <Redirect to={'/login'} />\n          </Route>\n        )}\n\n        <Route exact path=\"/login\">\n          <SignInForm />\n          {token !== '' && <Redirect to={'/contacts'} />}\n        </Route>\n\n        <Route exact path=\"/register\">\n          <RegistrationForm />\n          {token !== '' && <Redirect to={'/contacts'} />}\n        </Route>\n        {token !== '' && (\n          <Route exact path=\"/contacts\">\n            <h2 className={style.title__form}>Form Contact </h2>\n            <ContactForm />\n            <h2 className={style.title_list}>Contacts list</h2>\n            <Filter />\n            {isLoading ? <Loader /> : <ContactTable />}\n          </Route>\n        )}\n      </Switch>\n    </Route>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './actions.js';\n\nconst initialState = { name: '', token: '', email: '' };\n\nconst reducerSignInAndOut = createReducer(initialState, {\n  [actionSignInSuccess]: (_, { payload }) => {\n    return payload;\n  },\n  [actionSignInError]: () => initialState,\n  [actionSignOutSuccess]: ({ email }, _) => {\n    return { name: '', token: '', email };\n  },\n  [actionSignOutError]: () => initialState,\n});\n\nexport default reducerSignInAndOut;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionAddContact,\n  actionRemoveContact,\n  actionUpdateContact,\n  actionGetContacts,\n} from './actions.js';\n\nconst reducerContacts = createReducer([], {\n  [actionUpdateContact]: (state, { payload }) => {\n    let index;\n    state.find((contact, i) => {\n      if (contact.id === payload.id) index = i;\n    });\n    const contactUpdate = [...state];\n    contactUpdate[index] = payload;\n    return contactUpdate;\n  },\n  [actionAddContact]: (state, { payload }) => {\n    const contactsAdd = [...state, payload];\n    return contactsAdd;\n  },\n  [actionRemoveContact]: (state, { payload }) => {\n    const contactsRemove = [...state.filter(contact => contact.id !== payload)];\n    return contactsRemove;\n  },\n  [actionGetContacts]: (_, { payload }) => {\n    return payload;\n  },\n});\n\nexport default reducerContacts;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { actionSetFilter } from './actions.js';\n\nconst reducerFilter = createReducer('', {\n  [actionSetFilter]: (_, { payload }) => payload,\n});\n\nexport default reducerFilter;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { actionIsLoading } from './actions';\n\nconst reducerLoading = createReducer(false, {\n  [actionIsLoading]: (_, { payload }) => payload,\n});\n\nexport default reducerLoading;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport reducerAuthorization from '../authorization/reducer';\nimport reducerContacts from '../contacts/reducer';\nimport reducerFilter from '../filter/reducer';\nimport reducerLoading from '../loading/reducer';\n\nconst contactPersistConfig = {\n  key: 'token',\n  storage: storage,\n};\n\nexport const rootReducer = combineReducers({\n  contacts: reducerContacts,\n  filter: reducerFilter,\n  isLoading: reducerLoading,\n  logIn: persistReducer(contactPersistConfig, reducerAuthorization),\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { rootReducer } from './rootReducer/rootReducer';\n\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </BrowserRouter>\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_contact_form\":\"ContactForm_add_contact_form__2TE_D\",\"add_contact_input\":\"ContactForm_add_contact_input__21tSg\",\"add_contact_input_wrapper\":\"ContactForm_add_contact_input_wrapper__2pPwe\",\"add_contact_button\":\"ContactForm_add_contact_button__11Kfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn_form\":\"SignIn_signIn_form__3Cnst\",\"signIn_input\":\"SignIn_signIn_input__3OMgB\",\"signIn_input_wrapper\":\"SignIn_signIn_input_wrapper__2zZ4j\",\"signIn_button\":\"SignIn_signIn_button__FSTgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn_form\":\"RegistrationForm_signIn_form__fQZla\",\"signIn_input\":\"RegistrationForm_signIn_input__3lCIE\",\"signIn_input_wrapper\":\"RegistrationForm_signIn_input_wrapper__vtfu9\",\"signIn_button\":\"RegistrationForm_signIn_button__2EnFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link_wrapper\":\"NavigationLink_link_wrapper__1T7mh\",\"link_style\":\"NavigationLink_link_style__2da1T\",\"link_active_style\":\"NavigationLink_link_active_style__3Vfxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation__wrapper\":\"NavigationLinks_navigation__wrapper__1Drd3\",\"usr_name\":\"NavigationLinks_usr_name__3bI5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__form\":\"App_title__form__zw0sX\",\"title_list\":\"App_title_list__2x-B5\"};"],"sourceRoot":""}