{"version":3,"sources":["components/Filter/Filter.module.css","components/Loader/Loader.module.css","components/ContactList/ContactList.module.css","redux/contacts/selectors.js","redux/contacts/actions.js","data-api/api-contacts.js","components/ContactList/ContactList.jsx","managerToken/token.js","redux/loading/actions.js","components/ContactForm/ContactForm.jsx","redux/contacts/operations.js","redux/authorization/actions.js","redux/authorization/operations.js","components/Registration/RegistrationForm.jsx","redux/authorization/selectors.js","components/SignIn/SignIn.jsx","components/NavigationLinks/NavigationLink/NavigationLink.jsx","components/NavigationLinks/NavigationLinks.jsx","redux/filter/actions.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","redux/loading/selectors.js","App.js","redux/authorization/reducer.js","redux/contacts/reducer.js","redux/filter/reducer.js","redux/loading/reducer.js","redux/rootReducer/rootReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/SignIn/SignIn.module.css","components/Registration/RegistrationForm.module.css","components/NavigationLinks/NavigationLink/NavigationLink.module.css","components/NavigationLinks/NavigationLinks.module.css","App.module.css"],"names":["module","exports","getContact","state","contacts","getContactMemo","createSelector","getVisibleContactsMemo","filter","contact","name","toLowerCase","includes","actionAddContact","createAction","newContact","payload","actionRemoveContact","id","actionGetContacts","axios","require","defaults","baseURL","postRegistUser","newUser","a","post","data","postSignInUser","credentials","postSignOut","postAddNewContact","console","log","deleteContact","delete","getAllContactsUser","get","ContactList","visibleContacts","useSelector","dispatch","useDispatch","onRemove","length","className","style","contact_table","contact_thead","contact_thead_tr","contact_thead_tr_th","contact_tbody","map","number","contact_tbody_tr","contact_tbody_tr_td","onClick","handleAxios","token","headers","common","Authorization","actionIsLoading","flag","validationSchema","yup","required","min","ContactForm","logIn","onAdd","useEffect","error","formik","useFormik","initialValues","onSubmit","arrayItems","nameContact","isExistContact","find","alert","handleCheckUniqueContact","values","add_contact_form","handleSubmit","add_contact_input_wrapper","TextField","add_contact_input","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","add_contact_button","color","variant","actionSignInSuccess","actionSignInError","actionSignOutSuccess","actionSignOutError","asyncSignIn","user","email","asyncRegistNewUser","max","password","RegistrationForm","onRegisteration","filledForm","signIn_form","signIn_input_wrapper","signIn_button","getToken","getName","getEmail","SignInForm","signIn","emailLc","signIn_input","NavigationLink","to","text","link_wrapper","link_style","activeClassName","link_active_style","NavigationLinks","signOut","navigation__wrapper","usr_name","actionSetFilter","Filter","filter_form","onChangeCapture","target","fullWidth","Load","s","loader","height","width","timeout","getLoad","isLoading","App","path","exact","SignIn","title__form","title_list","Loader","reducerSignInAndOut","createReducer","_","reducerContacts","reducerFilter","reducerLoading","contactPersistConfig","key","storage","rootReducer","combineReducers","persistReducer","reducerAuthorization","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","document","getElementById"],"mappings":"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","file":"static/js/main.c391d655.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_form\":\"Filter_filter_form__1ChpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3G5A0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_table\":\"ContactList_contact_table__PPxWt\",\"contact_thead\":\"ContactList_contact_thead__3wbLD\",\"contact_thead_tr\":\"ContactList_contact_thead_tr__6gF1B\",\"contact_thead_tr_th\":\"ContactList_contact_thead_tr_th__19ERT\",\"contact_tbody\":\"ContactList_contact_tbody__1BnzO\",\"contact_tbody_tr\":\"ContactList_contact_tbody_tr__q9SFH\",\"contact_tbody_tr_td\":\"ContactList_contact_tbody_tr_td__1N_vd\"};","import { createSelector } from 'reselect';\n\nconst getContact = state => state.contacts;\nconst getState = state => state;\nconst getFilter = state => state.filter;\nconst getContactMemo = createSelector([getContact], contacts => contacts);\n\nconst getVisibleContactsMemo = createSelector(\n  [getContact, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n\nexport { getContactMemo, getState, getVisibleContactsMemo };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionAddContact = createAction('contacts/add', newContact => ({\n  payload: newContact,\n}));\nconst actionRemoveContact = createAction('contacts/remove', id => ({\n  payload: id,\n}));\n\nconst actionGetContacts = createAction('contacts/get', contacts => ({\n  payload: contacts,\n}));\n\nexport { actionAddContact, actionRemoveContact, actionGetContacts };\n","const axios = require('axios');\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst postRegistUser = async newUser => {\n  const { data } = await axios.post(`/users/signup`, newUser);\n  return data;\n};\nconst postSignInUser = async credentials => {\n  const { data } = await axios.post(`/users/login`, credentials);\n  return data;\n};\nconst postSignOut = async () => {\n  await axios.post(`/users/logout`);\n};\nconst postAddNewContact = async contact => {\n  const data = await axios.post(`/contacts`, contact);\n  console.log(data, `data`);\n};\nconst deleteContact = async id => {\n  console.log(id, `id`);\n  const data = await axios.delete(`/contacts/${id}`);\n  console.log(data, `data delete`);\n};\n\nconst getAllContactsUser = async () => {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n};\n\nexport {\n  postRegistUser,\n  postSignInUser,\n  postSignOut,\n  getAllContactsUser,\n  postAddNewContact,\n  deleteContact,\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport style from './ContactList.module.css';\nimport { getVisibleContactsMemo } from '../../redux/contacts/selectors';\nimport { actionRemoveContact } from 'redux/contacts/actions';\nimport { deleteContact } from 'data-api/api-contacts';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getVisibleContactsMemo);\n  const dispatch = useDispatch();\n  const onRemove = async id => {\n    await deleteContact(id);\n    dispatch(actionRemoveContact(id));\n  };\n\n  return visibleContacts.length !== 0 ? (\n    <table className={style.contact_table}>\n      <thead className={style.contact_thead}>\n        <tr className={style.contact_thead_tr}>\n          <th className={style.contact_thead_tr_th}>Contact name</th>\n          <th className={style.contact_thead_tr_th}>Phone number</th>\n        </tr>\n      </thead>\n      <tbody className={style.contact_tbody}>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <tr className={style.contact_tbody_tr} key={id}>\n              <td className={style.contact_tbody_tr_td}>{name}</td>\n              <td className={style.contact_tbody_tr_td}>{number}</td>\n              <td\n                className={style.contact_tbody_tr_td}\n                onClick={() => onRemove(id)}\n              >\n                delete\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  ) : null;\n};\n\nexport default ContactList;\n","const axios = require('axios');\n\nexport const handleAxios = {\n  setToken(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  removeToken() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionIsLoading = createAction('contacts/loading', flag => ({\n  payload: flag,\n}));\n\nexport { actionIsLoading };\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport style from './ContactForm.module.css';\nimport { handleAxios } from 'managerToken/token';\nimport { asyncOperationGetContacts } from '../../redux/contacts/operations';\nimport { actionAddContact } from 'redux/contacts/actions';\nimport { postAddNewContact } from 'data-api/api-contacts';\nimport { getContactMemo } from 'redux/contacts/selectors';\nconst validationSchema = yup.object({\n  name: yup.string('Enter your name').required('Name is required'),\n  number: yup\n    .number('Enter your number')\n    .min(8, 'Number should be of minimum 8 characters length')\n    .required('Number is required'),\n});\n\nfunction ContactForm() {\n  const contacts = useSelector(getContactMemo);\n\n  const {\n    logIn: { token },\n  } = useSelector(state => state);\n\n  const dispatch = useDispatch();\n  const onAdd = async newContact => {\n    await postAddNewContact(newContact);\n    dispatch(actionAddContact(newContact));\n  };\n\n  useEffect(() => {\n    if (token !== null || token !== '') {\n      handleAxios.setToken(token);\n      dispatch(asyncOperationGetContacts());\n    }\n  }, [dispatch, token]);\n\n  const handleCheckUniqueContact = (arrayItems, nameContact) => {\n    const isExistContact = !!arrayItems.find(\n      contact => contact.name === nameContact,\n    );\n    isExistContact && alert('Contact name is already exist');\n\n    return !isExistContact;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: ({ name, number }) => {\n      const isExistContact = handleCheckUniqueContact(contacts, name);\n      const newContact = { name, number };\n      if (!isExistContact) {\n        return;\n      }\n      formik.values.name = '';\n      formik.values.number = '';\n      return onAdd(newContact);\n    },\n  });\n\n  return (\n    <form className={style.add_contact_form} onSubmit={formik.handleSubmit}>\n      <div className={style.add_contact_input_wrapper}>\n        <TextField\n          className={style.add_contact_input}\n          id=\"name\"\n          name=\"name\"\n          label=\"Name...\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          className={style.add_contact_input}\n          id=\"number\"\n          name=\"number\"\n          label=\"Number...\"\n          type=\"tel\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n        />\n      </div>\n      <Button\n        className={style.add_contact_button}\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Add Contact\n      </Button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { actionGetContacts } from './actions';\nimport { actionIsLoading } from '../loading/actions';\nimport { getAllContactsUser } from 'data-api/api-contacts';\n\nconst asyncOperationGetContacts = () => async dispatch => {\n  try {\n    dispatch(actionIsLoading(true));\n    const data = await getAllContactsUser();\n    dispatch(actionGetContacts(data));\n  } catch (err) {\n    console.error(err);\n  } finally {\n    dispatch(actionIsLoading(false));\n  }\n};\n\nexport { asyncOperationGetContacts };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionSignInSuccess = createAction('signIn/success', value => ({\n  payload: value,\n}));\nconst actionSignInError = createAction('signIn/error', value => ({\n  payload: value,\n}));\nconst actionSignOutSuccess = createAction('signOut/success', value => ({\n  payload: value,\n}));\nconst actionSignOutError = createAction('signOut/error', value => ({\n  payload: value,\n}));\n\nexport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n};\n","import {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './actions.js';\nimport {\n  postSignInUser,\n  postSignOut,\n  postRegistUser,\n} from 'data-api/api-contacts';\n\nimport { handleAxios } from 'managerToken/token';\n\nconst asyncSignOut = () => async dispatch => {\n  try {\n    await postSignOut();\n    handleAxios.removeToken();\n    dispatch(actionSignOutSuccess());\n  } catch (err) {\n    dispatch(actionSignOutError());\n  }\n};\n\nconst asyncSignIn = credentials => async dispatch => {\n  try {\n    const {\n      token,\n      user: { name, email },\n    } = await postSignInUser(credentials);\n    handleAxios.setToken(token);\n    dispatch(actionSignInSuccess({ name, token, email }));\n  } catch (error) {\n    dispatch(actionSignInError());\n  }\n};\n\nconst asyncRegistNewUser = newUser => async dispatch => {\n  try {\n    const { token } = await postRegistUser(newUser);\n    handleAxios.setToken(token);\n    const { name, email } = newUser;\n    dispatch(actionSignInSuccess({ name, token, email }));\n  } catch (error) {\n    dispatch(actionSignInError());\n  }\n};\n\nexport { asyncSignIn, asyncSignOut, asyncRegistNewUser };\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { asyncRegistNewUser } from 'redux/authorization/operations';\nimport style from './RegistrationForm.module.css';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  name: yup\n    .string('Enter your NickName')\n    .max(15, 'Nickname can not  be more than 15 charts')\n    .required('Nickname is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const onRegisteration = async user => {\n    dispatch(await asyncRegistNewUser(user));\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: filledForm => {\n      onRegisteration(filledForm);\n    },\n  });\n\n  return (\n    <div>\n      <form className={style.signIn_form} onSubmit={formik.handleSubmit}>\n        <div className={style.signIn_input_wrapper}>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            label=\"Name...\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email...\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password...\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n        </div>\n        <Button\n          className={style.signIn_button}\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","const getToken = state => state.logIn.token;\nconst getName = state => state.logIn.name;\nconst getEmail = state => state.logIn.email;\n\nexport { getToken, getName, getEmail };\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getEmail } from 'redux/authorization/selectors';\nimport { asyncSignIn } from 'redux/authorization/operations';\nimport style from './SignIn.module.css';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const signIn = async credentials => {\n    dispatch(await asyncSignIn(credentials));\n  };\n  const emailLc = useSelector(getEmail);\n\n  const formik = useFormik({\n    initialValues: {\n      email: emailLc !== '' ? emailLc : '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: credentials => signIn(credentials),\n  });\n\n  return (\n    <form className={style.signIn_form} onSubmit={formik.handleSubmit}>\n      <div className={style.signIn_input_wrapper}>\n        <TextField\n          className={style.signIn_input}\n          id=\"email\"\n          name=\"email\"\n          label=\"Email...\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          className={style.signIn_input}\n          id=\"password\"\n          name=\"password\"\n          label=\"Password...\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </div>\n      <Button\n        className={style.signIn_button}\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default SignInForm;\n","import { NavLink } from 'react-router-dom';\n\nimport style from './NavigationLink.module.css';\n\nconst NavigationLink = ({ to, text, onClick }) => {\n  return (\n    <div className={style.link_wrapper}>\n      <NavLink\n        className={style.link_style}\n        activeClassName={text !== 'SignOut' ? style.link_active_style : ''}\n        to={to}\n        onClick={onClick && onClick}\n      >\n        {text}\n      </NavLink>\n    </div>\n  );\n};\nexport default NavigationLink;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport style from './NavigationLinks.module.css';\nimport NavigationLink from './NavigationLink/NavigationLink';\nimport { asyncSignOut } from 'redux/authorization/operations';\nimport { getToken, getName } from 'redux/authorization/selectors';\n\nconst NavigationLinks = () => {\n  const token = useSelector(getToken);\n  const name = useSelector(getName);\n  const dispatch = useDispatch();\n  const signOut = async () => {\n    dispatch(await asyncSignOut());\n  };\n  return (\n    <div className={style.navigation__wrapper}>\n      {token !== '' && (\n        <>\n          {name && <span className={style.usr_name}>{`<<${name}>>`}</span>}\n          <NavigationLink\n            to={'/login'}\n            text=\"SignOut\"\n            onClick={signOut}\n            name={name}\n          />\n        </>\n      )}\n      {token === '' && <NavigationLink to={'/login'} text=\"LogIn\" />}\n      {token === '' && <NavigationLink to={'/register'} text=\"Register\" />}\n    </div>\n  );\n};\nexport default NavigationLinks;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionSetFilter = createAction('filter/addFilter', filter => ({\n  payload: filter,\n}));\n\nexport { actionSetFilter };\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Field from '@material-ui/core/TextField';\n\nimport style from './Filter.module.css';\nimport { actionSetFilter } from 'redux/filter/actions';\nconst validationSchema = yup.object({\n  name: yup.string('Enter your name').required('Name is required'),\n});\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = valueInput =>\n    dispatch(actionSetFilter(valueInput));\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: validationSchema,\n    onChange: value => {},\n  });\n\n  return (\n    <form\n      className={style.filter_form}\n      onChangeCapture={({ target: { value } }) => handleFilterChange(value)}\n    >\n      <Field\n        fullWidth\n        id=\"name\"\n        name=\"name\"\n        value={formik.values.name}\n        onChangeCapture={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n    </form>\n  );\n};\nexport default Filter;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nimport s from './Loader.module.css';\n\nconst Load = () => {\n  return (\n    <Loader\n      className={s.loader}\n      type=\"Puff\"\n      color=\"#0ca0f5\"\n      height={100}\n      width={100}\n      timeout={300000}\n    />\n  );\n};\nexport default Load;\n","const getLoad = state => state.isLoading;\n\nexport { getLoad };\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport ContactList from 'components/ContactList/ContactList.jsx';\nimport ContactForm from 'components/ContactForm/ContactForm.jsx';\nimport RegistrationForm from 'components/Registration/RegistrationForm';\nimport SignInForm from 'components/SignIn/SignIn';\nimport NavigationLinks from 'components/NavigationLinks/NavigationLinks';\nimport Filter from 'components/Filter/Filter.jsx';\nimport Loader from 'components/Loader/Loader.jsx';\nimport { getToken } from 'redux/authorization/selectors';\nimport { getLoad } from 'redux/loading/selectors';\nimport style from './App.module.css';\n\nfunction App() {\n  const token = useSelector(getToken);\n  const isLoading = useSelector(getLoad);\n\n  return (\n    <Route path={'/'}>\n      <NavigationLinks />\n      <Switch>\n        {token !== '' && (\n          <Route exact path=\"/\">\n            <Redirect to={'/contacts'} />\n          </Route>\n        )}\n        {token === '' && (\n          <Route exact path=\"/contacts\">\n            <Redirect to={'/login'} />\n          </Route>\n        )}\n\n        <Route exact path=\"/login\">\n          <SignInForm />\n          {token !== '' && <Redirect to={'/contacts'} />}\n        </Route>\n\n        <Route exact path=\"/register\">\n          <RegistrationForm />\n          {token !== '' && <Redirect to={'/contacts'} />}\n        </Route>\n        {token !== '' && (\n          <Route exact path=\"/contacts\">\n            <h2 className={style.title__form}>From Contact </h2>\n            <ContactForm />\n            <h2 className={style.title_list}>Contacts list</h2>\n            <Filter />\n            {isLoading ? <Loader /> : <ContactList />}\n          </Route>\n        )}\n      </Switch>\n    </Route>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './actions.js';\n\nconst reducerSignInAndOut = createReducer(\n  { name: '', token: '', email: '' },\n  {\n    [actionSignInSuccess]: (_, { payload }) => {\n      return payload;\n    },\n    [actionSignInError]: ({ email }) => {\n      return { name: '', token: '', email };\n    },\n    [actionSignOutSuccess]: ({ email }, _) => {\n      return { name: '', token: '', email };\n    },\n    [actionSignOutError]: ({ email }) => {\n      return { name: '', token: '', email };\n    },\n  },\n);\n\nexport default reducerSignInAndOut;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionAddContact,\n  actionRemoveContact,\n  actionGetContacts,\n} from './actions.js';\n\nconst reducerContacts = createReducer([], {\n  [actionAddContact]: (state, { payload }) => {\n    const itemsAdd = [...state, payload];\n    return itemsAdd;\n  },\n  [actionRemoveContact]: (state, { payload }) => {\n    const itemsRemove = [...state.filter(contact => contact.id !== payload)];\n    return itemsRemove;\n  },\n  [actionGetContacts]: (_, { payload }) => {\n    return payload;\n  },\n});\n\nexport default reducerContacts;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { actionSetFilter } from './actions.js';\n\nconst reducerFilter = createReducer('', {\n  [actionSetFilter]: (_, { payload }) => payload,\n});\n\nexport default reducerFilter;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { actionIsLoading } from './actions';\n\nconst reducerLoading = createReducer(false, {\n  [actionIsLoading]: (_, { payload }) => payload,\n});\n\nexport default reducerLoading;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport reducerAuthorization from '../authorization/reducer';\nimport reducerContacts from '../contacts/reducer';\nimport reducerFilter from '../filter/reducer';\nimport reducerLoading from '../loading/reducer';\n\nconst contactPersistConfig = {\n  key: 'token',\n  storage: storage,\n};\n\nexport const rootReducer = combineReducers({\n  contacts: reducerContacts,\n  filter: reducerFilter,\n  isLoading: reducerLoading,\n  logIn: persistReducer(contactPersistConfig, reducerAuthorization),\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { rootReducer } from './rootReducer/rootReducer';\n\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </BrowserRouter>\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_contact_form\":\"ContactForm_add_contact_form__2TE_D\",\"add_contact_input\":\"ContactForm_add_contact_input__21tSg\",\"add_contact_input_wrapper\":\"ContactForm_add_contact_input_wrapper__2pPwe\",\"add_contact_button\":\"ContactForm_add_contact_button__11Kfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn_form\":\"SignIn_signIn_form__3Cnst\",\"signIn_input\":\"SignIn_signIn_input__3OMgB\",\"signIn_input_wrapper\":\"SignIn_signIn_input_wrapper__2zZ4j\",\"signIn_button\":\"SignIn_signIn_button__FSTgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn_form\":\"RegistrationForm_signIn_form__fQZla\",\"signIn_input\":\"RegistrationForm_signIn_input__3lCIE\",\"signIn_input_wrapper\":\"RegistrationForm_signIn_input_wrapper__vtfu9\",\"signIn_button\":\"RegistrationForm_signIn_button__2EnFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link_wrapper\":\"NavigationLink_link_wrapper__1T7mh\",\"link_style\":\"NavigationLink_link_style__2da1T\",\"link_active_style\":\"NavigationLink_link_active_style__3Vfxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation__wrapper\":\"NavigationLinks_navigation__wrapper__1Drd3\",\"usr_name\":\"NavigationLinks_usr_name__3bI5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__form\":\"App_title__form__zw0sX\",\"title_list\":\"App_title_list__2x-B5\"};"],"sourceRoot":""}