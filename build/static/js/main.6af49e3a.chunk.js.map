{"version":3,"sources":["components/Filter/Filter.module.css","components/Loader/Loader.module.css","components/ContactTable/ContactTable.module.css","validation.js/validation.js","redux/contacts/selectors.js","redux/contacts/actions.js","data-api/api-contacts.js","components/ContactTable/ContactTable.jsx","managerToken/token.js","redux/loading/actions.js","redux/authorization/selectors.js","components/ContactForm/ContactForm.jsx","redux/contacts/operations.js","redux/authorization/actions.js","redux/authorization/operations.js","components/Registration/RegistrationForm.jsx","components/SignIn/SignIn.jsx","components/NavigationLinks/NavigationLink/NavigationLink.jsx","components/NavigationLinks/NavigationLinks.jsx","redux/filter/actions.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","redux/loading/selectors.js","App.js","redux/authorization/reducer.js","redux/contacts/reducer.js","redux/filter/reducer.js","redux/loading/reducer.js","redux/rootReducer/rootReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/SignIn/SignIn.module.css","components/Registration/RegistrationForm.module.css","components/NavigationLinks/NavigationLink/NavigationLink.module.css","components/NavigationLinks/NavigationLinks.module.css","App.module.css"],"names":["module","exports","validationSchemaRegistration","yup","email","required","name","max","password","min","validationSchemaSignIn","validationSchemaContact","number","matches","checkInputUpdate","contact","validate","catch","errors","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleCheckUniqueContact","contacts","checkName","checkPhone","isExistName","some","isExistPhone","warn","getContact","state","getContactMemo","createSelector","getVisibleContactsMemo","filter","toLowerCase","includes","actionAddContact","createAction","newContact","payload","actionRemoveContact","id","actionUpdateContact","actionGetContacts","axios","require","defaults","baseURL","postRegistUser","user","a","post","data","postSignInUser","credentials","postSignOut","postAddNewContact","deleteContact","delete","updateContact","patch","getAllContactsUser","get","myRef","createRef","ContactTable","visibleContacts","useSelector","useState","setId","isOpen","setIsOpen","dispatch","useDispatch","onRemove","idUp","onOpenUpdate","i","isUsed","tdName","document","getElementById","tdNumber","tdUpdateAll","getElementsByClassName","style","contact_update","tdDeleteAll","contact_delete","checkOne","checkSecond","current","inputOne","inputSecond","value","contactUp","arrayBtn","Array","from","append","check","map","el","backgroundColor","textContent","pointerEvents","classList","remove","input_hidden","add","input_active","console","log","isExistContact","defaultValue","length","className","contact_table","contact_tbody_tr","contact_name","type","contact_number","onClick","handleAxios","token","headers","common","Authorization","actionIsLoading","flag","getToken","logIn","getName","getEmail","ContactForm","onAddContact","useEffect","formik","useFormik","initialValues","validationSchema","onSubmit","values","add_contact_form","handleSubmit","add_contact_input_wrapper","TextField","add_contact_input","label","onChange","handleChange","touched","Boolean","helperText","Button","add_contact_button","color","variant","actionSignInSuccess","actionSignInError","actionSignOutSuccess","actionSignOutError","asyncSignOut","info","asyncSignIn","userName","success","asyncRegistNewUser","RegistrationForm","onRegisteration","filledForm","signIn_form","signIn_input_wrapper","signIn_button","SignInForm","signIn","emailLc","signIn_input","NavigationLink","to","text","link_wrapper","link_style","activeClassName","link_active_style","NavigationLinks","signOut","navigation__wrapper","usr_name","actionSetFilter","Filter","filter_form","onChangeCapture","handleFilterChange","target","fullWidth","Load","s","loader","height","width","timeout","getLoad","isLoading","App","path","exact","SignIn","title__form","title_list","Loader","initialState","reducerSignInAndOut","createReducer","_","reducerContacts","index","find","contactUpdate","reducerFilter","reducerLoading","contactPersistConfig","key","storage","rootReducer","combineReducers","persistReducer","reducerAuthorization","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","newestOnTop","rtl","pauseOnFocusLoss"],"mappings":"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","file":"static/js/main.6af49e3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_form\":\"Filter_filter_form__1ChpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3G5A0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_table\":\"ContactTable_contact_table__2QUUP\",\"contact_name\":\"ContactTable_contact_name__2L-RQ\",\"contact_number\":\"ContactTable_contact_number__3i8v6\",\"input_hidden\":\"ContactTable_input_hidden__3UPS8\",\"input_active\":\"ContactTable_input_active__3MUFz\",\"contact_update\":\"ContactTable_contact_update__3pFrY\",\"contact_delete\":\"ContactTable_contact_delete__2zHtl\"};","import { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nconst validationSchemaRegistration = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  name: yup\n    .string('Enter your NickName')\n    .max(15, 'Nickname can not  be more than 15 charts')\n    .required('Nickname is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst validationSchemaSignIn = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .max(20, 'Password should be less 20 characters')\n    .required('Password is required'),\n});\n\nconst phoneRegExp = '^[0-9]+$';\n\nconst validationSchemaContact = yup.object({\n  name: yup\n    .string('Enter your name')\n    .required('Name is required')\n    .min(3, 'Minimal length 3')\n    .max(14, 'Maximal length 14'),\n  number: yup\n    .string('Enter your number')\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required('Number is required')\n    .min(10, 'Number should has 10 characters')\n    .max(10, 'Number should has 10 characters'),\n});\n\nconst checkInputUpdate = contact => {\n  return validationSchemaContact.validate(contact).catch(function ({ errors }) {\n    if (errors[0] !== '') {\n      toast.error(`🚀 ${errors[0]}!`, {\n        position: 'bottom-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return false;\n    }\n  });\n};\n\nconst handleCheckUniqueContact = (\n  contacts,\n  name,\n  number,\n  checkName = true,\n  checkPhone = true,\n) => {\n  const isExistName = contacts.some(contact => contact.name === name);\n  const isExistPhone = contacts.some(contact => contact.number === number);\n  checkName &&\n    isExistName &&\n    toast.warn('⚠️ You have contact with same name!', {\n      position: 'bottom-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  checkPhone &&\n    isExistPhone &&\n    toast.error('🚀 Number has been using!', {\n      position: 'bottom-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  return !isExistPhone;\n};\n\nexport {\n  validationSchemaRegistration,\n  validationSchemaSignIn,\n  validationSchemaContact,\n  checkInputUpdate,\n  handleCheckUniqueContact,\n};\n","import { createSelector } from 'reselect';\n\nconst getContact = state => state.contacts;\nconst getState = state => state;\nconst getFilter = state => state.filter;\nconst getContactMemo = createSelector([getContact], contacts => contacts);\n\nconst getVisibleContactsMemo = createSelector(\n  [getContact, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n\nexport { getContactMemo, getState, getVisibleContactsMemo };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionAddContact = createAction('contacts/add', newContact => ({\n  payload: newContact,\n}));\n\nconst actionRemoveContact = createAction('contacts/remove', id => ({\n  payload: id,\n}));\n\nconst actionUpdateContact = createAction('contacts/update', contact => ({\n  payload: contact,\n}));\n\nconst actionGetContacts = createAction('contacts/get', contacts => ({\n  payload: contacts,\n}));\n\nexport {\n  actionAddContact,\n  actionRemoveContact,\n  actionUpdateContact,\n  actionGetContacts,\n};\n","const axios = require('axios');\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst postRegistUser = async user => {\n  const { data } = await axios.post(`/users/signup`, user);\n  return data;\n};\nconst postSignInUser = async credentials => {\n  const { data } = await axios.post(`/users/login`, credentials);\n  return data;\n};\nconst postSignOut = async () => await axios.post(`/users/logout`);\n\nconst postAddNewContact = async contact => {\n  const { data } = await axios.post(`/contacts`, contact);\n  return data;\n};\n\nconst deleteContact = async id => await axios.delete(`/contacts/${id}`);\n\nconst updateContact = async (id, contact) =>\n  await axios.patch(`/contacts/${id}`, contact);\n\nconst getAllContactsUser = async () => {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n};\n\nexport {\n  postRegistUser,\n  postSignInUser,\n  postSignOut,\n  getAllContactsUser,\n  postAddNewContact,\n  updateContact,\n  deleteContact,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, createRef } from 'react';\n\nimport style from './ContactTable.module.css';\nimport {\n  handleCheckUniqueContact,\n  checkInputUpdate,\n} from '../../validation.js/validation';\nimport { getVisibleContactsMemo } from '../../redux/contacts/selectors';\nimport {\n  actionRemoveContact,\n  actionUpdateContact,\n} from 'redux/contacts/actions';\nimport { deleteContact, updateContact } from 'data-api/api-contacts';\n\nconst myRef = createRef();\n\nconst ContactTable = () => {\n  const visibleContacts = useSelector(getVisibleContactsMemo);\n  const [id, setId] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const onRemove = async idUp => {\n    if (id && id !== idUp) return;\n    await deleteContact(idUp);\n    dispatch(actionRemoveContact(idUp));\n  };\n\n  const onOpenUpdate = async (idUp, i, isUsed) => {\n    if (id && id !== idUp) return;\n\n    const tdName = document.getElementById(i + 'td-name');\n    const tdNumber = document.getElementById(i + 'td-number');\n    const tdUpdateAll = document.getElementsByClassName(style.contact_update);\n    const tdDeleteAll = document.getElementsByClassName(style.contact_delete);\n    const checkOne = document.getElementById(i + 'first');\n    const checkSecond = document.getElementById(i + 'second');\n\n    if (checkOne && checkSecond) {\n      myRef.current = { inputOne: checkOne, inputSecond: checkSecond };\n    }\n\n    const { inputOne, inputSecond } = myRef.current;\n    const name = inputOne.value;\n    const number = inputSecond.value;\n    const contactUp = { name, number };\n    const contact = { id: idUp, name, number };\n    const arrayBtn = [...Array.from(tdUpdateAll), ...Array.from(tdDeleteAll)];\n\n    if (!checkOne && !checkSecond) {\n      tdName.append(inputOne);\n      tdNumber.append(inputSecond);\n    }\n\n    setId(idUp);\n    let check = isOpen;\n    check = !check;\n    setIsOpen(() => check);\n    if (check) {\n      arrayBtn.map(el => {\n        if (el.id === i + 'td-update') {\n          el.style.backgroundColor = 'rgb(247, 171, 7)';\n          el.textContent = 'Done';\n          return null;\n        }\n        el.style.pointerEvents = 'none';\n      });\n      inputOne.classList.remove(style.input_hidden);\n      inputSecond.classList.remove(style.input_hidden);\n      inputOne.classList.add(style.input_active);\n      inputSecond.classList.add(style.input_active);\n    }\n    if (!check) {\n      try {\n        const isValid = await checkInputUpdate(contactUp);\n        if (!isValid) return setIsOpen(() => !check);\n      } catch (err) {\n        console.log(err);\n      }\n      if (\n        isUsed.name === contactUp.name &&\n        isUsed.number !== contactUp.number\n      ) {\n        const isExistContact = handleCheckUniqueContact(\n          visibleContacts,\n          name,\n          number,\n          false,\n          true,\n        );\n        setIsOpen(() => !check);\n        if (!isExistContact) return;\n      }\n      if (\n        isUsed.name !== contactUp.name &&\n        isUsed.number === contactUp.number\n      ) {\n        handleCheckUniqueContact(visibleContacts, name, number, true, false);\n      }\n      if (\n        isUsed.name !== contactUp.name &&\n        isUsed.number !== contactUp.number\n      ) {\n        const isExistContact = handleCheckUniqueContact(\n          visibleContacts,\n          name,\n          number,\n        );\n        setIsOpen(() => !check);\n        if (!isExistContact) return;\n      }\n      arrayBtn.map(el => {\n        if (el.id === i + 'td-update') {\n          el.style.backgroundColor = 'rgb(12, 247, 63)';\n          el.textContent = 'Update';\n        }\n        el.style.pointerEvents = '';\n      });\n      await updateContact(idUp, contactUp);\n      dispatch(actionUpdateContact(contact));\n      inputOne.classList.remove(style.input_active);\n      inputSecond.classList.remove(style.input_active);\n      inputOne.classList.add(style.input_hidden);\n      inputSecond.classList.add(style.input_hidden);\n      inputOne.defaultValue = '';\n      inputSecond.defaultValue = '';\n      setId(null);\n    }\n  };\n\n  return visibleContacts.length !== 0 ? (\n    <table className={style.contact_table}>\n      <tbody>\n        {visibleContacts.map(({ id, name, number }, i) => {\n          return (\n            <tr className={style.contact_tbody_tr} key={i}>\n              <td id={i + 'td-name'} className={style.contact_name}>\n                {name}\n                <input\n                  id={i + 'first'}\n                  className={style.input_hidden}\n                  type=\"text\"\n                  defaultValue={name}\n                ></input>\n              </td>\n              <td id={i + 'td-number'} className={style.contact_number}>\n                {number}\n                <input\n                  id={i + 'second'}\n                  className={style.input_hidden}\n                  type=\"tel\"\n                  defaultValue={number}\n                ></input>\n              </td>\n              <td\n                id={i + 'td-update'}\n                className={style.contact_update}\n                onClick={() => onOpenUpdate(id, i, { name, number })}\n              >\n                Update\n              </td>\n              <td\n                id={i + 'td-delete'}\n                className={style.contact_delete}\n                onClick={() => onRemove(id)}\n              >\n                Delete\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  ) : null;\n};\n\nexport default ContactTable;\n","const axios = require('axios');\n\nexport const handleAxios = {\n  setToken(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  removeToken() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionIsLoading = createAction('contacts/loading', flag => ({\n  payload: flag,\n}));\n\nexport { actionIsLoading };\n","const getToken = state => state.logIn.token;\nconst getName = state => state.logIn.name;\nconst getEmail = state => state.logIn.email;\n\nexport { getToken, getName, getEmail };\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport style from './ContactForm.module.css';\nimport {\n  handleCheckUniqueContact,\n  validationSchemaContact,\n} from '../../validation.js/validation';\nimport { handleAxios } from 'managerToken/token';\nimport { asyncOperationGetContacts } from '../../redux/contacts/operations';\nimport { actionAddContact } from 'redux/contacts/actions';\nimport { postAddNewContact } from 'data-api/api-contacts';\nimport { getToken } from 'redux/authorization/selectors';\nimport { getContactMemo } from 'redux/contacts/selectors';\n\nfunction ContactForm() {\n  const contacts = useSelector(getContactMemo);\n  const token = useSelector(getToken);\n\n  const dispatch = useDispatch();\n  const onAddContact = async contact => {\n    const data = await postAddNewContact(contact);\n    dispatch(actionAddContact(data));\n  };\n\n  useEffect(() => {\n    if (token !== null || token !== '') {\n      handleAxios.setToken(token);\n      dispatch(asyncOperationGetContacts());\n    }\n  }, [dispatch, token]);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: validationSchemaContact,\n    onSubmit: ({ name, number }) => {\n      const isExistContact = handleCheckUniqueContact(contacts, name, number);\n      const contact = { name, number };\n      if (!isExistContact) return;\n      formik.values.name = '';\n      formik.values.number = '';\n      return onAddContact(contact);\n    },\n  });\n\n  return (\n    <form className={style.add_contact_form} onSubmit={formik.handleSubmit}>\n      <div className={style.add_contact_input_wrapper}>\n        <TextField\n          className={style.add_contact_input}\n          id=\"name\"\n          name=\"name\"\n          label=\"Name...\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          className={style.add_contact_input}\n          id=\"number\"\n          name=\"number\"\n          label=\"Number...\"\n          type=\"tel\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n        />\n      </div>\n      <Button\n        className={style.add_contact_button}\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Create\n      </Button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { actionGetContacts } from './actions';\nimport { actionIsLoading } from '../loading/actions';\nimport { getAllContactsUser } from 'data-api/api-contacts';\n\nconst asyncOperationGetContacts = () => async dispatch => {\n  try {\n    dispatch(actionIsLoading(true));\n    const data = await getAllContactsUser();\n    dispatch(actionGetContacts(data));\n  } catch (err) {\n    console.error(err);\n  } finally {\n    dispatch(actionIsLoading(false));\n  }\n};\n\nexport { asyncOperationGetContacts };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionSignInSuccess = createAction('signIn/success', value => ({\n  payload: value,\n}));\nconst actionSignInError = createAction('signIn/error', value => ({\n  payload: value,\n}));\nconst actionSignOutSuccess = createAction('signOut/success', value => ({\n  payload: value,\n}));\nconst actionSignOutError = createAction('signOut/error', value => ({\n  payload: value,\n}));\n\nexport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n};\n","import { toast } from 'react-toastify';\nimport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './actions.js';\nimport {\n  postSignInUser,\n  postSignOut,\n  postRegistUser,\n} from 'data-api/api-contacts';\n\nimport { handleAxios } from 'managerToken/token';\n\nconst asyncSignOut = name => async dispatch => {\n  let check = null;\n  try {\n    await postSignOut();\n    handleAxios.removeToken();\n    dispatch(actionSignOutSuccess());\n    check = true;\n  } catch (err) {\n    check = false;\n    dispatch(actionSignOutError());\n  } finally {\n    check === true &&\n      toast.info(`👋 Goodby darling <<${name}>> !`, {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    check === false &&\n      toast.error('🚀 Server error!', {\n        position: 'bottom-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n  }\n};\n\nconst asyncSignIn = credentials => async dispatch => {\n  let userName = null;\n  try {\n    const {\n      token,\n      user: { name, email },\n    } = await postSignInUser(credentials);\n    handleAxios.setToken(token);\n    dispatch(actionSignInSuccess({ name, token, email }));\n    userName = name;\n  } catch (err) {\n    userName = null;\n    dispatch(actionSignInError());\n  } finally {\n    userName &&\n      toast.success(`🤟 Hello darling <<${userName}>> !`, {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    !userName &&\n      toast.error('🚀 Wrong credentials!', {\n        position: 'top-center',\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n  }\n};\n\nconst asyncRegistNewUser = user => async dispatch => {\n  const { name, email } = user;\n  try {\n    const { token } = await postRegistUser(user);\n    handleAxios.setToken(token);\n    dispatch(actionSignInSuccess({ name, token, email }));\n    toast.success(`🦄 Hello darling ${name} !`, {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  } catch (error) {\n    dispatch(actionSignInError());\n    toast.warn(`⚠️${email} Is right email?`, {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n};\n\nexport { asyncSignIn, asyncSignOut, asyncRegistNewUser };\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { validationSchemaRegistration } from '../../validation.js/validation';\nimport { asyncRegistNewUser } from 'redux/authorization/operations';\nimport style from './RegistrationForm.module.css';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const onRegisteration = async user => {\n    dispatch(await asyncRegistNewUser(user));\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchemaRegistration,\n    onSubmit: filledForm => {\n      onRegisteration(filledForm);\n    },\n  });\n\n  return (\n    <div>\n      <form className={style.signIn_form} onSubmit={formik.handleSubmit}>\n        <div className={style.signIn_input_wrapper}>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            label=\"Name...\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email...\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password...\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n        </div>\n        <Button\n          className={style.signIn_button}\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getEmail } from 'redux/authorization/selectors';\nimport { asyncSignIn } from 'redux/authorization/operations';\nimport { validationSchemaSignIn } from '../../validation.js/validation';\nimport style from './SignIn.module.css';\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const signIn = async credentials => {\n    dispatch(await asyncSignIn(credentials));\n  };\n  const emailLc = useSelector(getEmail);\n\n  const formik = useFormik({\n    initialValues: {\n      email: emailLc !== '' ? emailLc : '',\n      password: '',\n    },\n    validationSchema: validationSchemaSignIn,\n    onSubmit: credentials => signIn(credentials),\n  });\n\n  return (\n    <form className={style.signIn_form} onSubmit={formik.handleSubmit}>\n      <div className={style.signIn_input_wrapper}>\n        <TextField\n          className={style.signIn_input}\n          id=\"email\"\n          name=\"email\"\n          label=\"Email...\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          className={style.signIn_input}\n          id=\"password\"\n          name=\"password\"\n          label=\"Password...\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </div>\n      <Button\n        className={style.signIn_button}\n        color=\"primary\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default SignInForm;\n","import { NavLink } from 'react-router-dom';\n\nimport style from './NavigationLink.module.css';\n\nconst NavigationLink = ({ to, text, onClick }) => {\n  return (\n    <div className={style.link_wrapper}>\n      <NavLink\n        className={style.link_style}\n        activeClassName={text !== 'SignOut' ? style.link_active_style : ''}\n        to={to}\n        onClick={onClick && onClick}\n      >\n        {text}\n      </NavLink>\n    </div>\n  );\n};\nexport default NavigationLink;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport style from './NavigationLinks.module.css';\nimport NavigationLink from './NavigationLink/NavigationLink';\nimport { asyncSignOut } from 'redux/authorization/operations';\nimport { getToken, getName } from 'redux/authorization/selectors';\n\nconst NavigationLinks = () => {\n  const token = useSelector(getToken);\n  const name = useSelector(getName);\n  const dispatch = useDispatch();\n  const signOut = async () => {\n    dispatch(await asyncSignOut(name));\n  };\n  return (\n    <div className={style.navigation__wrapper}>\n      {token !== '' && (\n        <>\n          {name && <span className={style.usr_name}>{`<<${name}>>`}</span>}\n          <NavigationLink\n            to={'/login'}\n            text=\"SignOut\"\n            onClick={signOut}\n            name={name}\n          />\n        </>\n      )}\n      {token === '' && <NavigationLink to={'/login'} text=\"LogIn\" />}\n      {token === '' && <NavigationLink to={'/register'} text=\"Register\" />}\n    </div>\n  );\n};\nexport default NavigationLinks;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst actionSetFilter = createAction('filter/addFilter', filter => ({\n  payload: filter,\n}));\n\nexport { actionSetFilter };\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Field from '@material-ui/core/TextField';\n\nimport style from './Filter.module.css';\nimport { actionSetFilter } from 'redux/filter/actions';\nconst validationSchema = yup.object({\n  name: yup.string('Enter your name').required('Name is required'),\n});\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = value => dispatch(actionSetFilter(value));\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: validationSchema,\n    onChange: value => {},\n  });\n\n  return (\n    <form\n      className={style.filter_form}\n      onChangeCapture={({ target: { value } }) => handleFilterChange(value)}\n    >\n      <Field\n        fullWidth\n        id=\"name\"\n        name=\"name\"\n        value={formik.values.name}\n        onChangeCapture={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n    </form>\n  );\n};\nexport default Filter;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nimport s from './Loader.module.css';\n\nconst Load = () => {\n  return (\n    <Loader\n      className={s.loader}\n      type=\"Puff\"\n      color=\"#0ca0f5\"\n      height={100}\n      width={100}\n      timeout={300000}\n    />\n  );\n};\nexport default Load;\n","const getLoad = state => state.isLoading;\n\nexport { getLoad };\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport ContactTable from 'components/ContactTable/ContactTable.jsx';\nimport ContactForm from 'components/ContactForm/ContactForm.jsx';\nimport RegistrationForm from 'components/Registration/RegistrationForm';\nimport SignInForm from 'components/SignIn/SignIn';\nimport NavigationLinks from 'components/NavigationLinks/NavigationLinks';\nimport Filter from 'components/Filter/Filter.jsx';\nimport Loader from 'components/Loader/Loader.jsx';\nimport { getToken } from 'redux/authorization/selectors';\nimport { getLoad } from 'redux/loading/selectors';\nimport style from './App.module.css';\n\nfunction App() {\n  const token = useSelector(getToken);\n  const isLoading = useSelector(getLoad);\n\n  return (\n    <Route path={'/'}>\n      <NavigationLinks />\n      <Switch>\n        {token !== '' && (\n          <Route exact path=\"/\">\n            <Redirect to={'/contacts'} />\n          </Route>\n        )}\n        {token === '' && (\n          <Route exact path=\"/contacts\">\n            <Redirect to={'/login'} />\n          </Route>\n        )}\n\n        <Route exact path=\"/login\">\n          <SignInForm />\n          {token !== '' && <Redirect to={'/contacts'} />}\n        </Route>\n\n        <Route exact path=\"/register\">\n          <RegistrationForm />\n          {token !== '' && <Redirect to={'/contacts'} />}\n        </Route>\n        {token !== '' && (\n          <Route exact path=\"/contacts\">\n            <h2 className={style.title__form}>Form Contact </h2>\n            <ContactForm />\n            <h2 className={style.title_list}>Contacts list</h2>\n            <Filter />\n            {isLoading ? <Loader /> : <ContactTable />}\n          </Route>\n        )}\n      </Switch>\n    </Route>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  actionSignInSuccess,\n  actionSignInError,\n  actionSignOutSuccess,\n  actionSignOutError,\n} from './actions.js';\n\nconst initialState = { name: '', token: '', email: '' };\n\nconst reducerSignInAndOut = createReducer(initialState, {\n  [actionSignInSuccess]: (_, { payload }) => {\n    return payload;\n  },\n  [actionSignInError]: () => initialState,\n  [actionSignOutSuccess]: ({ email }, _) => {\n    return { name: '', token: '', email };\n  },\n  [actionSignOutError]: () => initialState,\n});\n\nexport default reducerSignInAndOut;\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  actionAddContact,\n  actionRemoveContact,\n  actionUpdateContact,\n  actionGetContacts,\n} from './actions.js';\n\nconst reducerContacts = createReducer([], {\n  [actionUpdateContact]: (state, { payload }) => {\n    let index;\n    state.find((contact, i) => {\n      if (contact.id === payload.id) index = i;\n    });\n    const contactUpdate = [...state];\n    contactUpdate[index] = payload;\n    return contactUpdate;\n  },\n  [actionAddContact]: (state, { payload }) => {\n    const contactsAdd = [...state, payload];\n    return contactsAdd;\n  },\n  [actionRemoveContact]: (state, { payload }) => {\n    const contactsRemove = [...state.filter(contact => contact.id !== payload)];\n    return contactsRemove;\n  },\n  [actionGetContacts]: (_, { payload }) => {\n    return payload;\n  },\n});\n\nexport default reducerContacts;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { actionSetFilter } from './actions.js';\n\nconst reducerFilter = createReducer('', {\n  [actionSetFilter]: (_, { payload }) => payload,\n});\n\nexport default reducerFilter;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { actionIsLoading } from './actions';\n\nconst reducerLoading = createReducer(false, {\n  [actionIsLoading]: (_, { payload }) => payload,\n});\n\nexport default reducerLoading;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport reducerAuthorization from '../authorization/reducer';\nimport reducerContacts from '../contacts/reducer';\nimport reducerFilter from '../filter/reducer';\nimport reducerLoading from '../loading/reducer';\n\nconst contactPersistConfig = {\n  key: 'token',\n  storage: storage,\n};\n\nexport const rootReducer = combineReducers({\n  contacts: reducerContacts,\n  filter: reducerFilter,\n  isLoading: reducerLoading,\n  logIn: persistReducer(contactPersistConfig, reducerAuthorization),\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { rootReducer } from './rootReducer/rootReducer';\n\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </BrowserRouter>\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_contact_form\":\"ContactForm_add_contact_form__2TE_D\",\"add_contact_input\":\"ContactForm_add_contact_input__21tSg\",\"add_contact_input_wrapper\":\"ContactForm_add_contact_input_wrapper__2pPwe\",\"add_contact_button\":\"ContactForm_add_contact_button__11Kfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn_form\":\"SignIn_signIn_form__3Cnst\",\"signIn_input\":\"SignIn_signIn_input__3OMgB\",\"signIn_input_wrapper\":\"SignIn_signIn_input_wrapper__2zZ4j\",\"signIn_button\":\"SignIn_signIn_button__FSTgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signIn_form\":\"RegistrationForm_signIn_form__fQZla\",\"signIn_input\":\"RegistrationForm_signIn_input__3lCIE\",\"signIn_input_wrapper\":\"RegistrationForm_signIn_input_wrapper__vtfu9\",\"signIn_button\":\"RegistrationForm_signIn_button__2EnFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link_wrapper\":\"NavigationLink_link_wrapper__1T7mh\",\"link_style\":\"NavigationLink_link_style__2da1T\",\"link_active_style\":\"NavigationLink_link_active_style__3Vfxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation__wrapper\":\"NavigationLinks_navigation__wrapper__1Drd3\",\"usr_name\":\"NavigationLinks_usr_name__3bI5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__form\":\"App_title__form__zw0sX\",\"title_list\":\"App_title_list__2x-B5\"};"],"sourceRoot":""}